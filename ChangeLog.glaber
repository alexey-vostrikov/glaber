var 2.11
    events now logged to history log interface, problems state is kept in the memory
ver 2.10
    History cache removed, shm ipc introduced, trigger calculation refactored
ver 2.9.10
    - fix API trends generation: reverted to standard trends extraction. However, if aggregation steps is requested, trends 
    will be returned in the aggregated format, removed some extra logging
ver 2.9.8
    - fixes: clickhouse item name quotation, fix value type parsing in item's value cache preload
ver 2.9.5
    - #removed some logging, #102 fix
ver 2.9.3
    - #127 fix
ver 2.9.2
    - clickhouse native support is returned and refactored, internal (server) API support for aggregated
        data for both history and trends introduced, go clickhouse module is considered deprecated now and 
        will be removed since 3.0
ver 2.9.1
    - fixed to correctly work with proxy
ver 2.9.0
    - Zabbix sources are upgraded to v 5.4.11
    - Check now fixed for async pollers
    - items state refactored to use common elems_hash library
ver 2.8.12
    - added logging and exiting when there is not enough State Cache memory
ver 2.8.11
    - fixed icmppingsec time to measured in seconds, not in milliseconds
ver 2.8.10
    - minor compile warn fixes, UNKNOW constant fix
ver 2.8.9
    - logging fix, item view errors fix
var 2.8.8
    - added Glaber server not running message to not confise with Zabbix
    - fixed race condition on heavy configs when async pollers might not get notificaton about 
    the new items
    - fixed <defunct> worker processes 
ver 2.8.7
    - fixed not supported filter in items view
ver 2.8.6
    - fixed template macro not applying due to fast config reload change
ver 2.8.5
    - removed some excessive logging
ver 2.8.4
    - fix of DCconfig_get_items_by_keys getting segv 
ver 2.8.3
    - removed experimental code server worker support (now workers configured in )
ver 2.8.2
    - Item API fixed to not return discovery items by default
    - Added ITEM LLD processing debug
ver 2.8.0:
    - databales.net for table views introduced
ver 2.7.0: 
    - introduced prototype of faster config cache reload
    - sever workers are created as a separate type and configured from the ui only, no server restart required any more
    - glaber pollers now reload items very fast (2 seconds delay) after they are changed in the config
    - UI notifies server on configruaration change and server does config reload, due to fast reloading it can reload the config quite fast
var 2.7.1
    - binary pools introduced for binary data interning
    - instant configuration reloading via changesets and server notifications introduced
    - algo: elems hash with per elements locks introduces as a general algo
    - algo: objects dual many to many list on top of elems hash created
    - removed rtdata updates for items
    - pre-parsing snmp oids for minor speed improvements
    - dns cache issues in pinger module fixes, dns resolve suppression on slow dns introduced
    - glb_server type of check introduces: simplified worker config, now done only in UI/API without server config, UI server worker type is added
    - trigger topology indexing functions removed
    - bugfix: flushing history to trends SQL table removed 
