zabbix_export:
  version: '5.2'
  date: '2020-12-24T03:24:32Z'
  groups:
    -
      name: Templates/Applications
  templates:
    -
      template: 'HashiCorp Vault by HTTP'
      name: 'HashiCorp Vault by HTTP'
      description: |
        Get HashiCorp Vault metrics from Vault API HTTP Prometheus metrics endpoint.
        
        Some metrics may not be collected depending on your Vault instance version and configuration.
        
        You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback
        
        Template tooling version used: 0.38
      groups:
        -
          name: Templates/Applications
      applications:
        -
          name: Vault
        -
          name: 'Zabbix raw items'
      items:
        -
          name: 'Vault: Check mountpoint discovery'
          type: DEPENDENT
          key: vault.check_mountpoint_discovery
          delay: '0'
          history: '0'
          trends: '0'
          value_type: TEXT
          applications:
            -
              name: 'Zabbix raw items'
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - '{__name__=~"^vault_rollback_attempt_(?:.+?)_count$"}'
              error_handler: DISCARD_VALUE
            -
              type: JAVASCRIPT
              parameters:
                - |
                  var name,
                      output = [];
                  
                  JSON.parse(value).forEach(function (v) {
                      if (name = v.name.match(/^vault_(rollback_attempt|route_rollback)_(.+?)_count$/)) {
                          output.push(
                              {
                                  '{#MOUNTPOINT}': name[2].replace(/_/g, '/'),
                                  '{#PATTERN_C}': 'vault_' + name[1] + '_' + name[2] + '_count',
                                  '{#PATTERN_Q}': 'vault_' + name[1] + '_' + name[2]
                              }
                          );
                      }
                  });
                  
                  return JSON.stringify(output);
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 15m
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Check replication discovery'
          type: DEPENDENT
          key: vault.check_replication_discovery
          delay: '0'
          history: '0'
          trends: '0'
          value_type: TEXT
          applications:
            -
              name: 'Zabbix raw items'
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - '{__name__=~"^replication_(?:.+)$"}'
              error_handler: DISCARD_VALUE
            -
              type: JAVASCRIPT
              parameters:
                - 'return JSON.stringify(value !== "[]" ? [{''{#SINGLETON}'': ''''}] : []);'
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 15m
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Check storage discovery'
          type: DEPENDENT
          key: vault.check_storage_discovery
          delay: '0'
          history: '0'
          trends: '0'
          value_type: TEXT
          applications:
            -
              name: 'Zabbix raw items'
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - '{__name__=~"^vault_(?:.+)_(?:get|put|list|delete)_count$"}'
              error_handler: DISCARD_VALUE
            -
              type: JAVASCRIPT
              parameters:
                - |
                  var name,
                      output = [];
                  
                  JSON.parse(value).forEach(function (v) {
                      if (name = v.name.match(/^vault_((?!barrier).+?)_(get|put|list|delete)_count$/)) {
                          output.push(
                              {
                                  '{#STORAGE}': name[1],
                                  '{#OPERATION}': name[2].toUpperCase(),
                                  '{#PATTERN_C}': 'vault_' + name[1] + '_' + name[2] + '_count',
                                  '{#PATTERN_Q}': 'vault_' + name[1] + '_' + name[2]
                              }
                          );
                      }
                  });
                  
                  return JSON.stringify(output);
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 15m
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Check WAL discovery'
          type: DEPENDENT
          key: vault.check_wal_discovery
          delay: '0'
          history: '0'
          trends: '0'
          value_type: TEXT
          applications:
            -
              name: 'Zabbix raw items'
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - '{__name__=~"^vault_wal_(?:.+)$"}'
              error_handler: DISCARD_VALUE
            -
              type: JAVASCRIPT
              parameters:
                - 'return JSON.stringify(value !== "[]" ? [{''{#SINGLETON}'': ''''}] : []);'
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 15m
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Clear metrics'
          type: DEPENDENT
          key: vault.clear_metrics
          delay: '0'
          history: '0'
          trends: '0'
          value_type: TEXT
          applications:
            -
              name: 'Zabbix raw items'
          preprocessing:
            -
              type: CHECK_JSON_ERROR
              parameters:
                - $.errors
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.get_metrics
        -
          name: 'Vault: Get health'
          type: HTTP_AGENT
          key: vault.get_health
          history: '0'
          trends: '0'
          value_type: TEXT
          applications:
            -
              name: 'Zabbix raw items'
          preprocessing:
            -
              type: CHECK_NOT_SUPPORTED
              parameters:
                - ''
              error_handler: CUSTOM_VALUE
              error_handler_params: '{"healthcheck": 0}'
          url: '{$VAULT.API.SCHEME}://{$VAULT.HOST}:{$VAULT.API.PORT}/v1/sys/health'
          status_codes: '200,429,472,473,503,501'
          headers:
            -
              name: X-Vault-Token
              value: '{$VAULT.TOKEN}'
        -
          name: 'Vault: Get leader'
          type: HTTP_AGENT
          key: vault.get_leader
          history: '0'
          trends: '0'
          value_type: TEXT
          applications:
            -
              name: 'Zabbix raw items'
          preprocessing:
            -
              type: CHECK_NOT_SUPPORTED
              parameters:
                - ''
              error_handler: DISCARD_VALUE
          url: '{$VAULT.API.SCHEME}://{$VAULT.HOST}:{$VAULT.API.PORT}/v1/sys/leader'
          headers:
            -
              name: X-Vault-Token
              value: '{$VAULT.TOKEN}'
        -
          name: 'Vault: Get metrics'
          type: HTTP_AGENT
          key: vault.get_metrics
          history: '0'
          trends: '0'
          value_type: TEXT
          applications:
            -
              name: 'Zabbix raw items'
          preprocessing:
            -
              type: CHECK_NOT_SUPPORTED
              parameters:
                - ''
              error_handler: DISCARD_VALUE
          url: '{$VAULT.API.SCHEME}://{$VAULT.HOST}:{$VAULT.API.PORT}/v1/sys/metrics?format=prometheus'
          status_codes: '200,503,403'
          headers:
            -
              name: X-Vault-Token
              value: '{$VAULT.TOKEN}'
        -
          name: 'Vault: Get metrics error'
          type: DEPENDENT
          key: vault.get_metrics.error
          delay: '0'
          history: 7d
          trends: '0'
          value_type: CHAR
          description: 'Get metrics error.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - '$.errors[0]'
              error_handler: CUSTOM_VALUE
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_metrics
          triggers:
            -
              expression: '{strlen()}>0'
              name: 'Vault: Failed to get metrics (error: {ITEM.VALUE})'
              priority: WARNING
              dependencies:
                -
                  name: 'Vault: Vault server is sealed'
                  expression: '{HashiCorp Vault by HTTP:vault.health.sealed.last()}=1'
        -
          name: 'Vault: Get tokens'
          type: SCRIPT
          key: vault.get_tokens
          delay: 15m
          history: '0'
          trends: '0'
          value_type: TEXT
          params: |
            var params = JSON.parse(value);
            
            params['url'] = params.scheme + '://'
                + params.host + ':'
                + params.port + '/v1/auth/token/lookup-accessor';
            
            var request = new CurlHttpRequest(),
                output = [];
            
            request.AddHeader('X-Vault-Token: ' + params.token);
            
            params.accessors.trim().split(/\x20+/).forEach(function (accessor) {
                if (!accessor) {
                    return;
                }
            
                var response,
                    data = {},
                    error_msg = '';
            
                try {
                    response = request.Post(params.url, JSON.stringify({ accessor: accessor }));
                    Zabbix.Log(4, '[ Vault API ] Received response with status code ' + request.Status() + ': ' + response);
            
                    if (response !== null) {
                        try {
                            response = JSON.parse(response);
                        }
                        catch (error) {
                            throw 'Failed to parse response received from Vault API. Check debug log for more information.';
                        }
                    }
            
                    if (request.Status() !== 200) {
                        throw response.errors && response.errors[0] || JSON.stringify(response);
                    }
            
                    if (typeof response !== 'object' || typeof response.data === 'undefined') {
                        throw 'Cannot lookup token from Vault API. Check debug log for more information.';
                    }
            
                    data = response.data;
                }
                catch (error) {
                    error_msg = error;
                }
            
                output.push({
                    'accessor': accessor,
                    'token_name': data.display_name || 'null',
                    'ttl': data.ttl || 0,
                    'has_ttl': !!data.expire_time,
                    'error': error_msg.toString()
                });
            });
            
            return JSON.stringify(output);
          description: 'Get information about tokens via their accessors. Accessors are defined in the macro "{$VAULT.TOKEN.ACCESSORS}".'
          applications:
            -
              name: 'Zabbix raw items'
          parameters:
            -
              name: host
              value: '{$VAULT.HOST}'
            -
              name: accessors
              value: '{$VAULT.TOKEN.ACCESSORS}'
            -
              name: token
              value: '{$VAULT.TOKEN}'
            -
              name: scheme
              value: '{$VAULT.API.SCHEME}'
            -
              name: port
              value: '{$VAULT.API.PORT}'
        -
          name: 'Vault: Healthcheck'
          type: DEPENDENT
          key: vault.health.check
          delay: '0'
          history: 7d
          description: 'Vault healthcheck.'
          applications:
            -
              name: Vault
          valuemap:
            name: 'Service state'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.healthcheck
              error_handler: CUSTOM_VALUE
              error_handler_params: '1'
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_health
          triggers:
            -
              expression: '{last()}=0'
              name: 'Vault: Vault server is not responding'
              priority: HIGH
        -
          name: 'Vault: Initialized'
          type: DEPENDENT
          key: vault.health.initialized
          delay: '0'
          history: 7d
          description: 'Initialization status.'
          applications:
            -
              name: Vault
          valuemap:
            name: 'Vault flag'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.initialized
              error_handler: DISCARD_VALUE
            -
              type: BOOL_TO_DECIMAL
              parameters:
                - ''
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_health
        -
          name: 'Vault: Performance standby'
          type: DEPENDENT
          key: vault.health.performance_standby
          delay: '0'
          history: 7d
          description: 'Performance standby status.'
          applications:
            -
              name: Vault
          valuemap:
            name: 'Vault flag'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.performance_standby
              error_handler: DISCARD_VALUE
            -
              type: BOOL_TO_DECIMAL
              parameters:
                - ''
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_health
        -
          name: 'Vault: Disaster Recovery replication'
          type: DEPENDENT
          key: vault.health.replication_dr_mode
          delay: '0'
          history: 7d
          trends: '0'
          value_type: CHAR
          description: |
            Disaster recovery replication mode
            https://www.vaultproject.io/docs/enterprise/replication
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.replication_dr_mode
              error_handler: DISCARD_VALUE
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_health
        -
          name: 'Vault: Performance replication'
          type: DEPENDENT
          key: vault.health.replication_performance_mode
          delay: '0'
          history: 7d
          trends: '0'
          value_type: CHAR
          description: |
            Performance replication mode
            https://www.vaultproject.io/docs/enterprise/replication
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.replication_performance_mode
              error_handler: DISCARD_VALUE
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_health
        -
          name: 'Vault: Sealed'
          type: DEPENDENT
          key: vault.health.sealed
          delay: '0'
          history: 7d
          description: 'Seal status.'
          applications:
            -
              name: Vault
          valuemap:
            name: 'Vault flag'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.sealed
              error_handler: DISCARD_VALUE
            -
              type: BOOL_TO_DECIMAL
              parameters:
                - ''
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_health
          triggers:
            -
              expression: '{last()}=1'
              name: 'Vault: Vault server is sealed'
              priority: AVERAGE
              description: 'https://www.vaultproject.io/docs/concepts/seal'
        -
          name: 'Vault: Standby'
          type: DEPENDENT
          key: vault.health.standby
          delay: '0'
          history: 7d
          description: 'Standby status.'
          applications:
            -
              name: Vault
          valuemap:
            name: 'Vault flag'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.standby
              error_handler: DISCARD_VALUE
            -
              type: BOOL_TO_DECIMAL
              parameters:
                - ''
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_health
        -
          name: 'Vault: Version'
          type: DEPENDENT
          key: vault.health.version
          delay: '0'
          history: 7d
          trends: '0'
          value_type: CHAR
          description: 'Server version.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.version
              error_handler: DISCARD_VALUE
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_health
          triggers:
            -
              expression: '{diff()}=1 and {strlen()}>0'
              name: 'Vault: Version has changed (new version: {ITEM.VALUE})'
              priority: INFO
              description: 'Vault version has changed. Ack to close.'
              manual_close: 'YES'
        -
          name: 'Vault: HA enabled'
          type: DEPENDENT
          key: vault.leader.ha_enabled
          delay: '0'
          history: 7d
          description: 'HA enabled status.'
          applications:
            -
              name: Vault
          valuemap:
            name: 'Vault flag'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.ha_enabled
            -
              type: BOOL_TO_DECIMAL
              parameters:
                - ''
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_leader
        -
          name: 'Vault: Is leader'
          type: DEPENDENT
          key: vault.leader.is_self
          delay: '0'
          history: 7d
          description: 'Leader status.'
          applications:
            -
              name: Vault
          valuemap:
            name: 'Vault flag'
          preprocessing:
            -
              type: JSONPATH
              parameters:
                - $.is_self
            -
              type: BOOL_TO_DECIMAL
              parameters:
                - ''
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.get_leader
        -
          name: 'Vault: Audit log request failures, rate'
          type: DEPENDENT
          key: vault.metrics.audit.log.request.failure.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of audit log request failures.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_audit_log_request_failure
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Audit log requests, rate'
          type: DEPENDENT
          key: vault.metrics.audit.log.request.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: rps
          description: 'Number of all audit log requests across all audit log devices.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_audit_log_request_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Audit log response failures, rate'
          type: DEPENDENT
          key: vault.metrics.audit.log.response.failure.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of audit log response failures.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_audit_log_response_failure
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Audit log response, rate'
          type: DEPENDENT
          key: vault.metrics.audit.log.response.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: rps
          description: 'Number of audit log responses across all audit log devices.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_audit_log_response_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Barrier DELETE ops, rate'
          type: DEPENDENT
          key: vault.metrics.barrier.delete.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of DELETE operations at the barrier.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_barrier_delete_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Barrier LIST ops, rate'
          type: DEPENDENT
          key: vault.metrics.barrier.list.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of LIST operations at the barrier.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_barrier_list_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Barrier PUT ops, rate'
          type: DEPENDENT
          key: vault.metrics.barrier.put.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of PUT operations at the barrier.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_barrier_put_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Cache hit, rate'
          type: DEPENDENT
          key: vault.metrics.cache.hit.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of times a value was retrieved from the LRU cache.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_cache_hit
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Cache miss, rate'
          type: DEPENDENT
          key: vault.metrics.cache.miss.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of times a value was not in the LRU cache. The results in a read from the configured storage.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_cache_miss
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Cache write, rate'
          type: DEPENDENT
          key: vault.metrics.cache.write.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of times a value was written to the LRU cache.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_cache_write
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Check token, rate'
          type: DEPENDENT
          key: vault.metrics.core.check.token.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of token checks handled by Vault corecore.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_core_check_token_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Fetch ACL and token, rate'
          type: DEPENDENT
          key: vault.metrics.core.fetch.acl_and_token
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of ACL and corresponding token entry fetches handled by Vault core.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_core_fetch_acl_and_token_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Requests, rate'
          type: DEPENDENT
          key: vault.metrics.core.handle.request
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of requests handled by Vault core.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_core_handle_request_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Leadership setup failed, counter'
          type: DEPENDENT
          key: vault.metrics.core.leadership.setup_failed
          delay: '0'
          history: 7d
          description: 'Cluster leadership setup failures which have occurred in a highly available Vault cluster.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - vault_core_leadership_setup_failed
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="vault_core_leadership_setup_failed")].value.sum()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: vault.clear_metrics
          triggers:
            -
              expression: '{delta(1h)}>{$VAULT.LEADERSHIP.SETUP.FAILED.MAX.WARN}'
              name: 'Vault: High frequency of leadership setup failures (over {$VAULT.LEADERSHIP.SETUP.FAILED.MAX.WARN} for 1h)'
              priority: AVERAGE
              description: 'There have been more than {$VAULT.LEADERSHIP.SETUP.FAILED.MAX.WARN} Vault leadership setup failures in the past 1h'
        -
          name: 'Vault: Leadership setup lost, counter'
          type: DEPENDENT
          key: vault.metrics.core.leadership_lost
          delay: '0'
          history: 7d
          description: 'Cluster leadership losses which have occurred in a highly available Vault cluster.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - vault_core_leadership_lost_count
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="vault_core_leadership_lost_count")].value.sum()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: vault.clear_metrics
          triggers:
            -
              expression: '{delta(1h)}>{$VAULT.LEADERSHIP.LOSSES.MAX.WARN}'
              name: 'Vault: High frequency of leadership losses (over {$VAULT.LEADERSHIP.LOSSES.MAX.WARN} for 1h)'
              priority: AVERAGE
              description: 'There have been more than {$VAULT.LEADERSHIP.LOSSES.MAX.WARN} Vault leadership losses in the past 1h'
        -
          name: 'Vault: Post-unseal ops, counter'
          type: DEPENDENT
          key: vault.metrics.core.post_unseal
          delay: '0'
          history: 7d
          description: 'Duration of time taken by post-unseal operations handled by Vault core'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_core_post_unseal_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Pre-seal ops, counter'
          type: DEPENDENT
          key: vault.metrics.core.pre_seal
          delay: '0'
          history: 7d
          description: 'Duration of time taken by pre-seal operations'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_core_pre_seal_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Seal ops, counter'
          type: DEPENDENT
          key: vault.metrics.core.seal
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Duration of time taken by seal operations.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_core_seal_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Internal seal ops, counter'
          type: DEPENDENT
          key: vault.metrics.core.seal_internal
          delay: '0'
          history: 7d
          description: 'Duration of time taken by internal seal operations.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_core_seal_internal_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Requested seal ops, counter'
          type: DEPENDENT
          key: vault.metrics.core.seal_with_request
          delay: '0'
          history: 7d
          description: 'Duration of time taken by requested seal operations.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_core_seal_with_request_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Leadership step downs, counter'
          type: DEPENDENT
          key: vault.metrics.core.step_down
          delay: '0'
          history: 7d
          description: 'Cluster leadership step down.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - vault_core_step_down_count
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="vault_core_step_down_count")].value.sum()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: vault.clear_metrics
          triggers:
            -
              expression: '{delta(1h)}>{$VAULT.LEADERSHIP.STEPDOWNS.MAX.WARN}'
              name: 'Vault: High frequency of leadership step downs (over {$VAULT.LEADERSHIP.STEPDOWNS.MAX.WARN} for 1h)'
              priority: AVERAGE
              description: 'There have been more than {$VAULT.LEADERSHIP.STEPDOWNS.MAX.WARN} Vault leadership step downs in the past 1h'
        -
          name: 'Vault: Unseal ops, counter'
          type: DEPENDENT
          key: vault.metrics.core.unseal
          delay: '0'
          history: 7d
          description: 'Duration of time taken by unseal operations.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_core_unseal_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Fetch lease times, counter'
          type: DEPENDENT
          key: vault.metrics.expire.fetch.lease.times
          delay: '0'
          history: 7d
          description: 'Time taken to fetch lease times.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_fetch_lease_times_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Fetch lease times by token, counter'
          type: DEPENDENT
          key: vault.metrics.expire.fetch.lease.times.by_token
          delay: '0'
          history: 7d
          description: 'Time taken to fetch lease times by token.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_fetch_lease_times_by_token_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Number of expiring leases'
          type: DEPENDENT
          key: vault.metrics.expire.num_leases
          delay: '0'
          history: 7d
          description: 'Number of all leases which are eligible for eventual expiry.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_num_leases
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Register ops, count'
          type: DEPENDENT
          key: vault.metrics.expire.register
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Time taken for register operations.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_register_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Register auth ops, count'
          type: DEPENDENT
          key: vault.metrics.expire.register.auth
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Time taken for register authentication operations which create lease entries without lease ID.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_register_auth_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Expire renew, count'
          type: DEPENDENT
          key: vault.metrics.expire.renew
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Time taken to renew a lease.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_renew_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Renew token, count'
          type: DEPENDENT
          key: vault.metrics.expire.renew_token
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Time taken to renew a token which does not need to invoke a logical backend.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_renew_token_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Expire revoke, count'
          type: DEPENDENT
          key: vault.metrics.expire.revoke
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Time taken to revoke a token.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_revoke_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Revoke secrets by token, count'
          type: DEPENDENT
          key: vault.metrics.expire.revoke.by_token
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Time taken to revoke all secrets issued with a given token.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_revoke_by_token_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Expire revoke force, count'
          type: DEPENDENT
          key: vault.metrics.expire.revoke.force
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Time taken to forcibly revoke a token.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_revoke_force_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Expire revoke prefix, count'
          type: DEPENDENT
          key: vault.metrics.expire.revoke.prefix
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Tokens revoke on a prefix.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_expire_revoke_prefix_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Policy DELETE ops, rate'
          type: DEPENDENT
          key: vault.metrics.policy.delete_policy.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of operations to delete a policy.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_policy_delete_policy_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Policy GET ops, rate'
          type: DEPENDENT
          key: vault.metrics.policy.get_policy.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of operations to get a policy.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_policy_get_policy_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Policy LIST ops, rate'
          type: DEPENDENT
          key: vault.metrics.policy.list_policies.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of operations to list policies.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_policy_list_policies_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Policy SET ops, rate'
          type: DEPENDENT
          key: vault.metrics.policy.set_policy.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of operations to set a policy.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_policy_set_policy_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Process CPU seconds, total'
          type: DEPENDENT
          key: vault.metrics.process.cpu.seconds.total
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: s
          description: 'Total user and system CPU time spent in seconds.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - process_cpu_seconds_total
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Open file descriptors, max'
          type: DEPENDENT
          key: vault.metrics.process.max.fds
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Maximum number of open file descriptors.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - process_max_fds
                - ''
              error_handler: DISCARD_VALUE
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Open file descriptors, current'
          type: DEPENDENT
          key: vault.metrics.process.open.fds
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of open file descriptors.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - process_open_fds
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Process resident memory'
          type: DEPENDENT
          key: vault.metrics.process.resident_memory.bytes
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: B
          description: 'Resident memory size in bytes.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - process_resident_memory_bytes
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Uptime'
          type: DEPENDENT
          key: vault.metrics.process.uptime
          delay: '0'
          history: 7d
          units: s
          description: 'Server uptime.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - process_start_time_seconds
                - ''
              error_handler: DISCARD_VALUE
            -
              type: JAVASCRIPT
              parameters:
                - 'return Math.floor(Date.now()/1000 - Number(value));'
          master_item:
            key: vault.clear_metrics
          triggers:
            -
              expression: '{last()}<10m'
              name: 'Vault: has been restarted (uptime < 10m)'
              priority: INFO
              description: 'Uptime is less than 10 minutes'
              manual_close: 'YES'
        -
          name: 'Vault: Process virtual memory, current'
          type: DEPENDENT
          key: vault.metrics.process.virtual_memory.bytes
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: B
          description: 'Virtual memory size in bytes.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - process_virtual_memory_bytes
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Process virtual memory, max'
          type: DEPENDENT
          key: vault.metrics.process.virtual_memory.max.bytes
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: B
          description: 'Maximum amount of virtual memory available in bytes.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - process_virtual_memory_max_bytes
                - ''
              error_handler: DISCARD_VALUE
            -
              type: DISCARD_UNCHANGED_HEARTBEAT
              parameters:
                - 1h
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Runtime allocated bytes'
          type: DEPENDENT
          key: vault.metrics.runtime.alloc.bytes
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: B
          description: 'Number of bytes allocated by the Vault process. This could burst from time to time, but should return to a steady state value.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_runtime_alloc_bytes
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Runtime freed objects'
          type: DEPENDENT
          key: vault.metrics.runtime.free.count
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of freed objects.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_runtime_free_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Runtime heap objects'
          type: DEPENDENT
          key: vault.metrics.runtime.heap.objects
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of objects on the heap. This is a good general memory pressure indicator worth establishing a baseline and thresholds for alerting.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_runtime_heap_objects
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Runtime malloc count'
          type: DEPENDENT
          key: vault.metrics.runtime.malloc.count
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Cumulative count of allocated heap objects.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_runtime_malloc_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Runtime num goroutines'
          type: DEPENDENT
          key: vault.metrics.runtime.num_goroutines
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of goroutines. This serves as a general system load indicator worth establishing a baseline and thresholds for alerting.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_runtime_num_goroutines
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Runtime sys bytes'
          type: DEPENDENT
          key: vault.metrics.runtime.sys.bytes
          delay: '0'
          history: 7d
          value_type: FLOAT
          units: B
          description: 'Number of bytes allocated to Vault. This includes what is being used by Vault''s heap and what has been reclaimed but not given back to the operating system.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_runtime_sys_bytes
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Runtime GC runs, total'
          type: DEPENDENT
          key: vault.metrics.runtime.total.gc.runs
          delay: '0'
          history: 7d
          description: 'Total number of garbage collection runs since Vault was last started.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_runtime_total_gc_runs
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Secret kv entries'
          type: DEPENDENT
          key: vault.metrics.secret.kv.count
          delay: '0'
          history: 7d
          description: 'Number of entries in each key-value secret engine'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - vault_secret_kv_count
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="vault_secret_kv_count")].value.sum()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token secret lease creation, rate'
          type: DEPENDENT
          key: vault.metrics.secret.lease.creation.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Counts the number of leases created by secret engines.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - vault_secret_lease_creation
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="vault_secret_lease_creation")].value.sum()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token count, total'
          type: DEPENDENT
          key: vault.metrics.token
          delay: '0'
          history: 7d
          description: 'Total number of service tokens available for use; counts all un-expired and un-revoked tokens in Vault''s token store. This measurement is performed every 10 minutes.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - vault_token_count
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="vault_token_count")].value.sum()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token count by auth, total'
          type: DEPENDENT
          key: vault.metrics.token.by_auth
          delay: '0'
          history: 7d
          description: 'Total number of service tokens that were created by a auth method.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - vault_token_count_by_auth
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="vault_token_count_by_auth")].value.sum()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token count by policy, total'
          type: DEPENDENT
          key: vault.metrics.token.by_policy
          delay: '0'
          history: 7d
          description: 'Total number of service tokens that have a policy attached.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - vault_token_count_by_policy
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="vault_token_count_by_policy")].value.sum()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token count by ttl, total'
          type: DEPENDENT
          key: vault.metrics.token.by_ttl
          delay: '0'
          history: 7d
          description: 'Number of service tokens, grouped by the TTL range they were assigned at creation'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - vault_token_count_by_ttl
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="vault_token_count_by_ttl")].value.sum()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token create, count'
          type: DEPENDENT
          key: vault.metrics.token.create
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'The time taken to create a token.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_token_create_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token createAccessor, count'
          type: DEPENDENT
          key: vault.metrics.token.createAccessor
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'The time taken to create a token accessor.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_token_createAccessor_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token creation, rate'
          type: DEPENDENT
          key: vault.metrics.token.creation.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of service or batch tokens created.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_TO_JSON
              parameters:
                - vault_token_creation
            -
              type: JSONPATH
              parameters:
                - '$[?(@.name=="vault_token_creation")].value.sum()'
              error_handler: CUSTOM_VALUE
              error_handler_params: '0'
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token lookup, rate'
          type: DEPENDENT
          key: vault.metrics.token.lookup.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of token look up.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_token_lookup_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token revoke, count'
          type: DEPENDENT
          key: vault.metrics.token.revoke
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'The time taken to look up a token.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_token_revoke_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token revoke tree, count'
          type: DEPENDENT
          key: vault.metrics.token.revoke.tree
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Time taken to revoke a token tree.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_token_revoke_tree_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Token store, count'
          type: DEPENDENT
          key: vault.metrics.token.store
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Time taken to store an updated token entry without writing to the secondary index.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_token_store_count
                - ''
              error_handler: DISCARD_VALUE
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Runtime GC pause, total'
          type: DEPENDENT
          key: vault.metrics.total.gc.pause
          delay: '0'
          history: 7d
          units: s
          description: 'The total garbage collector pause time since Vault was last started.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_runtime_total_gc_pause_ns
                - ''
              error_handler: DISCARD_VALUE
            -
              type: MULTIPLIER
              parameters:
                - '1.0E-9'
          master_item:
            key: vault.clear_metrics
        -
          name: 'Vault: Barrier GET ops, rate'
          type: DEPENDENT
          key: vault.metrics.vault.barrier.get.rate
          delay: '0'
          history: 7d
          value_type: FLOAT
          description: 'Number of GET operations at the barrier.'
          applications:
            -
              name: Vault
          preprocessing:
            -
              type: PROMETHEUS_PATTERN
              parameters:
                - vault_barrier_get_count
                - ''
              error_handler: DISCARD_VALUE
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
          master_item:
            key: vault.clear_metrics
      discovery_rules:
        -
          name: 'Mountpoint metrics discovery'
          type: DEPENDENT
          key: vault.mountpoint.discovery
          delay: '0'
          description: 'Mountpoint metrics discovery.'
          item_prototypes:
            -
              name: 'Vault: Rollback attempt [{#MOUNTPOINT}] ops, rate'
              type: DEPENDENT
              key: 'vault.metrics.rollback.attempt.rate[{#MOUNTPOINT}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Number of operations to perform a rollback operation on the given mount point.'
              application_prototypes:
                -
                  name: 'Vault: Mountpoint {#MOUNTPOINT}'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - '{#PATTERN_C}'
                    - ''
                  error_handler: DISCARD_VALUE
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: Route rollback [{#MOUNTPOINT}] ops, rate'
              type: DEPENDENT
              key: 'vault.metrics.route.rollback.rate[{#MOUNTPOINT}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Number of operations to dispatch a rollback operation to a backend, and for that backend to process it. Rollback operations are automatically scheduled to clean up partial errors.'
              application_prototypes:
                -
                  name: 'Vault: Mountpoint {#MOUNTPOINT}'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - '{#PATTERN_C}'
                    - ''
                  error_handler: DISCARD_VALUE
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: vault.clear_metrics
          master_item:
            key: vault.check_mountpoint_discovery
        -
          name: 'Replication metrics discovery'
          type: DEPENDENT
          key: vault.replication.discovery
          delay: '0'
          description: 'Discovery for replication metrics.'
          item_prototypes:
            -
              name: 'Vault: Stream WAL guard found, count{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.logshipper.streamWALs.guard_found[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Number of incidences where the starting Merkle Tree index used to begin streaming WAL entries is matched/found'
              application_prototypes:
                -
                  name: 'Vault: Replication'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - logshipper_streamWALs_guard_found
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: Stream WAL missing guard, count{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.logshipper.streamWALs.missing_guard[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Number of incidences where the starting Merkle Tree index used to begin streaming WAL entries is not matched/found'
              application_prototypes:
                -
                  name: 'Vault: Replication'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - logshipper_streamWALs_missing_guard
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: Last remote WAL{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.replication.fsm.last_remote_wal[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The index of the last remote WAL.'
              application_prototypes:
                -
                  name: 'Vault: Replication'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - replication_fsm_last_remote_wal
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: Merkle commit index{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.replication.merkle.commit_index[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The last committed index in the Merkle Tree.'
              application_prototypes:
                -
                  name: 'Vault: Replication'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - replication_merkle_commit_index
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: Last DR WAL{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.replication.wal.last_dr_wal[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The index of the last DR WAL.'
              application_prototypes:
                -
                  name: 'Vault: Replication'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - replication_wal_last_dr_wal
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: Last performance WAL{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.replication.wal.last_performance_wal[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The index of the last Performance WAL.'
              application_prototypes:
                -
                  name: 'Vault: Replication'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - replication_wal_last_performance_wal
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: Last WAL{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.replication.wal.last_wal[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'The index of the last WAL.'
              application_prototypes:
                -
                  name: 'Vault: Replication'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - replication_wal_last_wal
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
          master_item:
            key: vault.check_replication_discovery
        -
          name: 'Storage metrics discovery'
          type: DEPENDENT
          key: vault.storage.discovery
          delay: '0'
          filter:
            evaltype: AND
            conditions:
              -
                macro: '{#STORAGE}'
                value: '{$VAULT.LLD.FILTER.STORAGE.MATCHES}'
                formulaid: A
          description: 'Storage backend metrics discovery.'
          item_prototypes:
            -
              name: 'Vault: Storage [{#STORAGE}] {#OPERATION} ops, rate'
              type: DEPENDENT
              key: 'vault.metrics.storage.rate[{#STORAGE}, {#OPERATION}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Number of a {#OPERATION} operation against the {#STORAGE} storage backend'
              application_prototypes:
                -
                  name: 'Vault: Storage {#STORAGE}'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - '{#PATTERN_C}'
                    - ''
                  error_handler: DISCARD_VALUE
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
              master_item:
                key: vault.clear_metrics
          master_item:
            key: vault.check_storage_discovery
        -
          name: 'Token metrics discovery'
          type: DEPENDENT
          key: vault.tokens.discovery
          delay: '0'
          description: 'Tokens metrics doscovery.'
          item_prototypes:
            -
              name: 'Token [{#TOKEN_NAME}] error'
              type: DEPENDENT
              key: 'vault.token_via_accessor.error["{#ACCESSOR}"]'
              delay: '0'
              history: 7d
              trends: '0'
              value_type: CHAR
              description: 'Token lookup error text.'
              application_prototypes:
                -
                  name: 'Vault: Token {#TOKEN_NAME}'
              valuemap:
                name: 'Vault flag'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$.[?(@.accessor == "{#ACCESSOR}")].error.first()'
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: vault.get_tokens
              trigger_prototypes:
                -
                  expression: '{strlen()}>0'
                  name: 'Token [{#TOKEN_NAME}] lookup error occurred'
                  priority: WARNING
                  dependencies:
                    -
                      name: 'Vault: Vault server is sealed'
                      expression: '{HashiCorp Vault by HTTP:vault.health.sealed.last()}=1'
            -
              name: 'Token [{#TOKEN_NAME}] has TTL'
              type: DEPENDENT
              key: 'vault.token_via_accessor.has_ttl["{#ACCESSOR}"]'
              delay: '0'
              history: 7d
              description: 'The Token has TTL.'
              application_prototypes:
                -
                  name: 'Vault: Token {#TOKEN_NAME}'
              valuemap:
                name: 'Vault flag'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$.[?(@.accessor == "{#ACCESSOR}")].has_ttl.first()'
                -
                  type: BOOL_TO_DECIMAL
                  parameters:
                    - ''
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1h
              master_item:
                key: vault.get_tokens
            -
              name: 'Token [{#TOKEN_NAME}] TTL'
              type: DEPENDENT
              key: 'vault.token_via_accessor.ttl["{#ACCESSOR}"]'
              delay: '0'
              history: 7d
              units: s
              description: 'The TTL period of the token.'
              application_prototypes:
                -
                  name: 'Vault: Token {#TOKEN_NAME}'
              preprocessing:
                -
                  type: JSONPATH
                  parameters:
                    - '$.[?(@.accessor == "{#ACCESSOR}")].ttl.first()'
              master_item:
                key: vault.get_tokens
          trigger_prototypes:
            -
              expression: '{HashiCorp Vault by HTTP:vault.token_via_accessor.has_ttl["{#ACCESSOR}"].last()}=1 and {HashiCorp Vault by HTTP:vault.token_via_accessor.ttl["{#ACCESSOR}"].last()}<{$VAULT.TOKEN.TTL.MIN.CRIT}'
              name: 'Vault: Token [{#TOKEN_NAME}] will expire soon (less than {$VAULT.TOKEN.TTL.MIN.CRIT})'
              priority: AVERAGE
            -
              expression: '{HashiCorp Vault by HTTP:vault.token_via_accessor.has_ttl["{#ACCESSOR}"].last()}=1 and {HashiCorp Vault by HTTP:vault.token_via_accessor.ttl["{#ACCESSOR}"].last()}<{$VAULT.TOKEN.TTL.MIN.WARN}'
              name: 'Vault: Token [{#TOKEN_NAME}] will expire soon (less than {$VAULT.TOKEN.TTL.MIN.WARN})'
              priority: WARNING
              dependencies:
                -
                  name: 'Vault: Token [{#TOKEN_NAME}] will expire soon (less than {$VAULT.TOKEN.TTL.MIN.CRIT})'
                  expression: '{HashiCorp Vault by HTTP:vault.token_via_accessor.has_ttl["{#ACCESSOR}"].last()}=1 and {HashiCorp Vault by HTTP:vault.token_via_accessor.ttl["{#ACCESSOR}"].last()}<{$VAULT.TOKEN.TTL.MIN.CRIT}'
          master_item:
            key: vault.get_tokens
          lld_macro_paths:
            -
              lld_macro: '{#ACCESSOR}'
              path: $.accessor
            -
              lld_macro: '{#TOKEN_NAME}'
              path: $.token_name
        -
          name: 'WAL metrics discovery'
          type: DEPENDENT
          key: vault.wal.discovery
          delay: '0'
          description: 'Discovery for WAL metrics.'
          item_prototypes:
            -
              name: 'Vault: Delete WALs, count{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.wal.deletewals[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Time taken to delete a Write Ahead Log (WAL)'
              application_prototypes:
                -
                  name: 'Vault: WAL'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - vault_wal_deletewals_count
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: Flush ready WAL, count{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.wal.flushready[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Time taken to flush a ready Write Ahead Log (WAL) to storage'
              application_prototypes:
                -
                  name: 'Vault: WAL'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - vault_wal_flushready_count
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: GC deleted WAL{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.wal.gc.deleted[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Number of Write Ahead Logs (WAL) deleted during each garbage collection run'
              application_prototypes:
                -
                  name: 'Vault: WAL'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - vault_wal_gc_deleted
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: WALs on disk, total{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.wal.gc.total[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Total Number of Write Ahead Logs (WAL) on disk'
              application_prototypes:
                -
                  name: 'Vault: WAL'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - vault_wal_gc_total
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: Load WALs, count{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.wal.loadWAL[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Time taken to load a Write Ahead Log (WAL)'
              application_prototypes:
                -
                  name: 'Vault: WAL'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - vault_wal_loadWAL_count
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
            -
              name: 'Vault: Persist WALs, count{#SINGLETON}'
              type: DEPENDENT
              key: 'vault.metrics.wal.persistwals[{#SINGLETON}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              description: 'Time taken to persist a Write Ahead Log (WAL)'
              application_prototypes:
                -
                  name: 'Vault: WAL'
              preprocessing:
                -
                  type: PROMETHEUS_PATTERN
                  parameters:
                    - vault_wal_persistwals_count
                    - ''
                  error_handler: DISCARD_VALUE
              master_item:
                key: vault.clear_metrics
          master_item:
            key: vault.check_wal_discovery
      macros:
        -
          macro: '{$VAULT.API.PORT}'
          value: '8200'
          description: 'Vault port.'
        -
          macro: '{$VAULT.API.SCHEME}'
          value: http
          description: 'Vault API scheme.'
        -
          macro: '{$VAULT.HOST}'
          value: '<PUT YOUR VAULT HOST>'
          description: 'Vault host name'
        -
          macro: '{$VAULT.LEADERSHIP.LOSSES.MAX.WARN}'
          value: '5'
          description: 'Maximum number of Vault leadership losses.'
        -
          macro: '{$VAULT.LEADERSHIP.SETUP.FAILED.MAX.WARN}'
          value: '5'
          description: 'Maximum number of Vault leadership setyp failed.'
        -
          macro: '{$VAULT.LEADERSHIP.STEPDOWNS.MAX.WARN}'
          value: '5'
          description: 'Maximum number of Vault leadership step downs.'
        -
          macro: '{$VAULT.LLD.FILTER.STORAGE.MATCHES}'
          value: .+
          description: 'Filter of discoverable storage backends.'
        -
          macro: '{$VAULT.OPEN.FDS.MAX.WARN}'
          value: '90'
          description: 'Maximum percentage of used file descriptors for trigger expression'
        -
          macro: '{$VAULT.TOKEN}'
          value: '<PUT YOUR AUTH TOKEN>'
          description: 'Vault auth token.'
        -
          macro: '{$VAULT.TOKEN.ACCESSORS}'
          description: 'Vault accessors separated by spaces for monitoring token expiration time.'
        -
          macro: '{$VAULT.TOKEN.TTL.MIN.CRIT}'
          value: 3d
          description: 'Token TTL critical threshold.'
        -
          macro: '{$VAULT.TOKEN.TTL.MIN.WARN}'
          value: 7d
          description: 'Token TTL warning threshold.'
      dashboards:
        -
          name: 'Vault overview'
          widgets:
            -
              type: GRAPH_CLASSIC
              name: Cache
              x: '12'
              'y': '10'
              width: '12'
              height: '5'
              fields:
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'Vault: Cache rate'
                    host: 'HashiCorp Vault by HTTP'
            -
              type: GRAPH_CLASSIC
              name: 'K/V entries'
              x: '12'
              'y': '5'
              width: '12'
              height: '5'
              fields:
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'Vault: K/V secret engine entries'
                    host: 'HashiCorp Vault by HTTP'
            -
              type: GRAPH_CLASSIC
              name: Leases
              x: '12'
              'y': '15'
              width: '12'
              height: '5'
              fields:
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'Vault: Expiring leases'
                    host: 'HashiCorp Vault by HTTP'
            -
              type: GRAPH_CLASSIC
              name: Requests
              width: '12'
              height: '5'
              fields:
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'Vault: Requests rate'
                    host: 'HashiCorp Vault by HTTP'
            -
              type: GRAPH_CLASSIC
              name: 'Runtime memory'
              x: '12'
              width: '12'
              height: '5'
              fields:
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'Vault: Runtime memory'
                    host: 'HashiCorp Vault by HTTP'
            -
              type: GRAPH_CLASSIC
              name: 'Token checks'
              'y': '15'
              width: '12'
              height: '5'
              fields:
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'Vault: Token checks'
                    host: 'HashiCorp Vault by HTTP'
            -
              type: GRAPH_CLASSIC
              name: 'Tokens count'
              'y': '5'
              width: '12'
              height: '5'
              fields:
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'Vault: Tokens count'
                    host: 'HashiCorp Vault by HTTP'
            -
              type: GRAPH_CLASSIC
              name: 'Tokens lookup'
              'y': '10'
              width: '12'
              height: '5'
              fields:
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'Vault: Token lookup'
                    host: 'HashiCorp Vault by HTTP'
  triggers:
    -
      expression: '{HashiCorp Vault by HTTP:vault.metrics.process.open.fds.min(5m)}/{HashiCorp Vault by HTTP:vault.metrics.process.max.fds.last()}*100>{$VAULT.OPEN.FDS.MAX.WARN}'
      name: 'Vault: Current number of open files is too high (over {$VAULT.OPEN.FDS.MAX.WARN}% for 5m)'
      priority: WARNING
  graphs:
    -
      name: 'Vault: Cache rate'
      graph_items:
        -
          drawtype: BOLD_LINE
          color: 1A7C11
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.cache.hit.rate
        -
          sortorder: '1'
          drawtype: BOLD_LINE
          color: 2774A4
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.cache.miss.rate
        -
          sortorder: '2'
          drawtype: BOLD_LINE
          color: F63100
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.cache.write.rate
    -
      name: 'Vault: Expiring leases'
      graph_items:
        -
          drawtype: GRADIENT_LINE
          color: 1A7C11
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.expire.num_leases
    -
      name: 'Vault: K/V secret engine entries'
      graph_items:
        -
          drawtype: GRADIENT_LINE
          color: 1A7C11
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.secret.kv.count
    -
      name: 'Vault: Requests rate'
      graph_items:
        -
          drawtype: GRADIENT_LINE
          color: 34bdeb
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.core.handle.request
    -
      name: 'Vault: Runtime memory'
      graph_items:
        -
          drawtype: GRADIENT_LINE
          color: 1A7C11
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.runtime.alloc.bytes
        -
          sortorder: '1'
          drawtype: GRADIENT_LINE
          color: 2774A4
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.process.resident_memory.bytes
        -
          sortorder: '2'
          drawtype: BOLD_LINE
          color: F63100
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.process.virtual_memory.bytes
    -
      name: 'Vault: Token checks'
      graph_items:
        -
          drawtype: GRADIENT_LINE
          color: 1A7C11
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.core.check.token.rate
    -
      name: 'Vault: Token lookup'
      graph_items:
        -
          drawtype: GRADIENT_LINE
          color: 1A7C11
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.token.lookup.rate
    -
      name: 'Vault: Tokens count'
      graph_items:
        -
          drawtype: GRADIENT_LINE
          color: 1A7C11
          item:
            host: 'HashiCorp Vault by HTTP'
            key: vault.metrics.token
  value_maps:
    -
      name: 'Service state'
      mappings:
        -
          value: '0'
          newvalue: Down
        -
          value: '1'
          newvalue: Up
    -
      name: 'Vault flag'
      mappings:
        -
          value: '0'
          newvalue: 'False'
        -
          value: '1'
          newvalue: 'True'
