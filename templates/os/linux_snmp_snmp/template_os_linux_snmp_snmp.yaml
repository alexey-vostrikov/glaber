zabbix_export:
  version: '5.2'
  date: '2020-10-16T09:33:38Z'
  groups:
    -
      name: Templates/Modules
    -
      name: 'Templates/Operating systems'
  templates:
    -
      template: 'Linux block devices SNMP'
      name: 'Linux block devices SNMP'
      description: |
        MIBs used:
        UCD-DISKIO-MIB
        
        Template tooling version used: 0.38
      groups:
        -
          name: Templates/Modules
      applications:
        -
          name: Storage
      discovery_rules:
        -
          name: 'Block devices discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#DEVNAME},1.3.6.1.4.1.2021.13.15.1.1.2]'
          key: 'vfs.dev.discovery[snmp]'
          delay: 1h
          filter:
            evaltype: AND
            conditions:
              -
                macro: '{#DEVNAME}'
                value: '{$VFS.DEV.DEVNAME.MATCHES}'
                formulaid: A
              -
                macro: '{#DEVNAME}'
                value: '{$VFS.DEV.DEVNAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: B
          description: 'Block devices are discovered from UCD-DISKIO-MIB::diskIOTable (http://net-snmp.sourceforge.net/docs/mibs/ucdDiskIOMIB.html#diskIOTable)'
          item_prototypes:
            -
              name: '{#DEVNAME}: Disk read rate'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.4.1.2021.13.15.1.1.5.{#SNMPINDEX}'
              key: 'vfs.dev.read.rate[diskIOReads.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '!r/s'
              description: |
                MIB: UCD-DISKIO-MIB
                The number of read accesses from this device since boot.
              application_prototypes:
                -
                  name: 'Disk {#DEVNAME}'
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
            -
              name: '{#DEVNAME}: Disk utilization'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.4.1.2021.13.15.1.1.9.{#SNMPINDEX}'
              key: 'vfs.dev.util[diskIOLA1.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-DISKIO-MIB
                The 1 minute average load of disk (%)
              application_prototypes:
                -
                  name: 'Disk {#DEVNAME}'
            -
              name: '{#DEVNAME}: Disk write rate'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.4.1.2021.13.15.1.1.6.{#SNMPINDEX}'
              key: 'vfs.dev.write.rate[diskIOWrites.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '!w/s'
              description: |
                MIB: UCD-DISKIO-MIB
                The number of write accesses from this device since boot.
              application_prototypes:
                -
                  name: 'Disk {#DEVNAME}'
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
          graph_prototypes:
            -
              name: '{#DEVNAME}: Disk read/write rates'
              graph_items:
                -
                  color: 1A7C11
                  item:
                    host: 'Linux block devices SNMP'
                    key: 'vfs.dev.read.rate[diskIOReads.{#SNMPINDEX}]'
                -
                  sortorder: '1'
                  drawtype: GRADIENT_LINE
                  color: 2774A4
                  item:
                    host: 'Linux block devices SNMP'
                    key: 'vfs.dev.write.rate[diskIOWrites.{#SNMPINDEX}]'
      macros:
        -
          macro: '{$VFS.DEV.DEVNAME.MATCHES}'
          value: .+
          description: 'This macro is used in block devices discovery. Can be overridden on the host or linked template level'
        -
          macro: '{$VFS.DEV.DEVNAME.NOT_MATCHES}'
          value: '^(loop[0-9]*|sd[a-z][0-9]+|nbd[0-9]+|sr[0-9]+|fd[0-9]+|dm-[0-9]+|ram[0-9]+|ploop[a-z0-9]+|md[0-9]*|hcp[0-9]*|zram[0-9]*)'
          description: 'This macro is used in block devices discovery. Can be overridden on the host or linked template level'
    -
      template: 'Linux CPU SNMP'
      name: 'Linux CPU SNMP'
      description: |
        MIBs used:
        HOST-RESOURCES-MIB
        UCD-SNMP-MIB
        
        Template tooling version used: 0.38
      groups:
        -
          name: Templates/Modules
      applications:
        -
          name: CPU
      items:
        -
          name: 'Interrupts per second'
          type: SNMP_AGENT
          snmp_oid: 1.3.6.1.4.1.2021.11.59.0
          key: 'system.cpu.intr[ssRawInterrupts.0]'
          history: 7d
          value_type: FLOAT
          applications:
            -
              name: CPU
          preprocessing:
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
        -
          name: 'Load average (1m avg)'
          type: SNMP_AGENT
          snmp_oid: '1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-1"]'
          key: 'system.cpu.load.avg1[laLoad.1]'
          history: 7d
          value_type: FLOAT
          description: 'MIB: UCD-SNMP-MIB'
          applications:
            -
              name: CPU
        -
          name: 'Load average (5m avg)'
          type: SNMP_AGENT
          snmp_oid: '1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-5"]'
          key: 'system.cpu.load.avg5[laLoad.2]'
          history: 7d
          value_type: FLOAT
          description: 'MIB: UCD-SNMP-MIB'
          applications:
            -
              name: CPU
        -
          name: 'Load average (15m avg)'
          type: SNMP_AGENT
          snmp_oid: '1.3.6.1.4.1.2021.10.1.3["index","1.3.6.1.4.1.2021.10.1.2", "Load-15"]'
          key: 'system.cpu.load.avg15[laLoad.3]'
          history: 7d
          value_type: FLOAT
          description: 'MIB: UCD-SNMP-MIB'
          applications:
            -
              name: CPU
        -
          name: 'Number of CPUs'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#SNMPVALUE},1.3.6.1.2.1.25.3.3.1.1]'
          key: 'system.cpu.num[snmp]'
          history: 7d
          description: |
            MIB: HOST-RESOURCES-MIB
            Count the number of CPU cores by counting number of cores discovered in hrProcessorTable using LLD
          applications:
            -
              name: CPU
          preprocessing:
            -
              type: JAVASCRIPT
              parameters:
                - |
                  //count the number of cores
                  return JSON.parse(value).length;
                  
        -
          name: 'Context switches per second'
          type: SNMP_AGENT
          snmp_oid: 1.3.6.1.4.1.2021.11.60.0
          key: 'system.cpu.switches[ssRawContexts.0]'
          history: 7d
          value_type: FLOAT
          applications:
            -
              name: CPU
          preprocessing:
            -
              type: CHANGE_PER_SECOND
              parameters:
                - ''
      discovery_rules:
        -
          name: 'CPU discovery'
          type: DEPENDENT
          key: 'cpu.discovery[snmp]'
          delay: '0'
          description: 'This discovery will create set of per core CPU metrics from UCD-SNMP-MIB, using {#CPU.COUNT} in preprocessing. That''s the only reason why LLD is used.'
          item_prototypes:
            -
              name: 'CPU guest time'
              type: SNMP_AGENT
              snmp_oid: 1.3.6.1.4.1.2021.11.65.0
              key: 'system.cpu.guest[ssCpuRawGuest.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                Guest  time (time  spent  running  a  virtual  CPU  for  a  guest  operating  system)
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //to get utilization in %, divide by N, where N is number of cores.
                      return value/{#CPU.COUNT}
                      
            -
              name: 'CPU guest nice time'
              type: SNMP_AGENT
              snmp_oid: 1.3.6.1.4.1.2021.11.66.0
              key: 'system.cpu.guest_nice[ssCpuRawGuestNice.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                Time spent running a niced guest (virtual CPU for guest operating systems under the control of the Linux kernel)
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //to get utilization in %, divide by N, where N is number of cores.
                      return value/{#CPU.COUNT}
                      
            -
              name: 'CPU idle time'
              type: SNMP_AGENT
              snmp_oid: 1.3.6.1.4.1.2021.11.53.0
              key: 'system.cpu.idle[ssCpuRawIdle.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                The time the CPU has spent doing nothing.
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //to get utilization in %, divide by N, where N is number of cores.
                      return value/{#CPU.COUNT}
                      
            -
              name: 'CPU interrupt time'
              type: SNMP_AGENT
              snmp_oid: 1.3.6.1.4.1.2021.11.56.0
              key: 'system.cpu.interrupt[ssCpuRawInterrupt.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                The amount of time the CPU has been servicing hardware interrupts.
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //to get utilization in %, divide by N, where N is number of cores.
                      return value/{#CPU.COUNT}
                      
            -
              name: 'CPU iowait time'
              type: SNMP_AGENT
              snmp_oid: 1.3.6.1.4.1.2021.11.54.0
              key: 'system.cpu.iowait[ssCpuRawWait.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                Amount of time the CPU has been waiting for I/O to complete.
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //to get utilization in %, divide by N, where N is number of cores.
                      return value/{#CPU.COUNT}
                      
            -
              name: 'CPU nice time'
              type: SNMP_AGENT
              snmp_oid: 1.3.6.1.4.1.2021.11.51.0
              key: 'system.cpu.nice[ssCpuRawNice.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                The time the CPU has spent running users' processes that have been niced.
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //to get utilization in %, divide by N, where N is number of cores.
                      return value/{#CPU.COUNT}
                      
            -
              name: 'CPU softirq time'
              type: SNMP_AGENT
              snmp_oid: 1.3.6.1.4.1.2021.11.61.0
              key: 'system.cpu.softirq[ssCpuRawSoftIRQ.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                The amount of time the CPU has been servicing software interrupts.
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //to get utilization in %, divide by N, where N is number of cores.
                      return value/{#CPU.COUNT}
                      
            -
              name: 'CPU steal time'
              type: SNMP_AGENT
              snmp_oid: 1.3.6.1.4.1.2021.11.64.0
              key: 'system.cpu.steal[ssCpuRawSteal.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                The amount of CPU 'stolen' from this virtual machine by the hypervisor for other tasks (such as running another virtual machine).
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //to get utilization in %, divide by N, where N is number of cores.
                      return value/{#CPU.COUNT}
                      
            -
              name: 'CPU system time'
              type: SNMP_AGENT
              snmp_oid: 1.3.6.1.4.1.2021.11.52.0
              key: 'system.cpu.system[ssCpuRawSystem.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                The time the CPU has spent running the kernel and its processes.
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //to get utilization in %, divide by N, where N is number of cores.
                      return value/{#CPU.COUNT}
                      
            -
              name: 'CPU user time'
              type: SNMP_AGENT
              snmp_oid: 1.3.6.1.4.1.2021.11.50.0
              key: 'system.cpu.user[ssCpuRawUser.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                The time the CPU has spent running users' processes that are not niced.
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: CHANGE_PER_SECOND
                  parameters:
                    - ''
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //to get utilization in %, divide by N, where N is number of cores.
                      return value/{#CPU.COUNT}
                      
            -
              name: 'CPU utilization'
              type: DEPENDENT
              key: 'system.cpu.util[snmp,{#SNMPINDEX}]'
              delay: '0'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: 'CPU utilization in %'
              applications:
                -
                  name: CPU
              preprocessing:
                -
                  type: JAVASCRIPT
                  parameters:
                    - |
                      //Calculate utilization
                      return (100 - value)
                      
              master_item:
                key: 'system.cpu.idle[ssCpuRawIdle.{#SNMPINDEX}]'
              trigger_prototypes:
                -
                  expression: '{min(5m)}>{$CPU.UTIL.CRIT}'
                  name: 'High CPU utilization (over {$CPU.UTIL.CRIT}% for 5m)'
                  opdata: 'Current utilization: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: 'CPU utilization is too high. The system might be slow to respond.'
          graph_prototypes:
            -
              name: 'CPU usage{#SINGLETON}'
              type: STACKED
              ymin_type_1: FIXED
              ymax_type_1: FIXED
              graph_items:
                -
                  color: 1A7C11
                  item:
                    host: 'Linux CPU SNMP'
                    key: 'system.cpu.system[ssCpuRawSystem.{#SNMPINDEX}]'
                -
                  sortorder: '1'
                  color: 2774A4
                  item:
                    host: 'Linux CPU SNMP'
                    key: 'system.cpu.user[ssCpuRawUser.{#SNMPINDEX}]'
                -
                  sortorder: '2'
                  color: F63100
                  item:
                    host: 'Linux CPU SNMP'
                    key: 'system.cpu.nice[ssCpuRawNice.{#SNMPINDEX}]'
                -
                  sortorder: '3'
                  color: A54F10
                  item:
                    host: 'Linux CPU SNMP'
                    key: 'system.cpu.iowait[ssCpuRawWait.{#SNMPINDEX}]'
                -
                  sortorder: '4'
                  color: FC6EA3
                  item:
                    host: 'Linux CPU SNMP'
                    key: 'system.cpu.steal[ssCpuRawSteal.{#SNMPINDEX}]'
                -
                  sortorder: '5'
                  color: 6C59DC
                  item:
                    host: 'Linux CPU SNMP'
                    key: 'system.cpu.interrupt[ssCpuRawInterrupt.{#SNMPINDEX}]'
                -
                  sortorder: '6'
                  color: AC8C14
                  item:
                    host: 'Linux CPU SNMP'
                    key: 'system.cpu.softirq[ssCpuRawSoftIRQ.{#SNMPINDEX}]'
                -
                  sortorder: '7'
                  color: 611F27
                  item:
                    host: 'Linux CPU SNMP'
                    key: 'system.cpu.guest[ssCpuRawGuest.{#SNMPINDEX}]'
                -
                  sortorder: '8'
                  color: F230E0
                  item:
                    host: 'Linux CPU SNMP'
                    key: 'system.cpu.guest_nice[ssCpuRawGuestNice.{#SNMPINDEX}]'
            -
              name: 'CPU utilization{#SINGLETON}'
              ymin_type_1: FIXED
              ymax_type_1: FIXED
              graph_items:
                -
                  drawtype: GRADIENT_LINE
                  color: 1A7C11
                  item:
                    host: 'Linux CPU SNMP'
                    key: 'system.cpu.util[snmp,{#SNMPINDEX}]'
          master_item:
            key: 'system.cpu.num[snmp]'
          preprocessing:
            -
              type: JAVASCRIPT
              parameters:
                - |
                  //count the number of CPU cores
                  return JSON.stringify([{"{#CPU.COUNT}": value, "{#SNMPINDEX}": 0, "{#SINGLETON}":""}])
                  
      macros:
        -
          macro: '{$CPU.UTIL.CRIT}'
          value: '90'
        -
          macro: '{$LOAD_AVG_PER_CPU.MAX.WARN}'
          value: '1.5'
          description: 'Load per CPU considered sustainable. Tune if needed.'
    -
      template: 'Linux filesystems SNMP'
      name: 'Linux filesystems SNMP'
      description: |
        MIBs used:
        HOST-RESOURCES-MIB
        UCD-SNMP-MIB
        
        Template tooling version used: 0.38
      groups:
        -
          name: Templates/Modules
      applications:
        -
          name: Storage
      discovery_rules:
        -
          name: 'Mounted filesystem discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#FSNAME},1.3.6.1.2.1.25.2.3.1.3,{#FSTYPE},1.3.6.1.2.1.25.2.3.1.2,{#ALLOC_UNITS},1.3.6.1.2.1.25.2.3.1.4]'
          key: 'vfs.fs.discovery[snmp]'
          delay: 1h
          filter:
            evaltype: AND
            conditions:
              -
                macro: '{#FSTYPE}'
                value: '{$VFS.FS.FSTYPE.MATCHES}'
                formulaid: C
              -
                macro: '{#FSTYPE}'
                value: '{$VFS.FS.FSTYPE.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: D
              -
                macro: '{#FSNAME}'
                value: '{$VFS.FS.FSNAME.MATCHES}'
                formulaid: A
              -
                macro: '{#FSNAME}'
                value: '{$VFS.FS.FSNAME.NOT_MATCHES}'
                operator: NOT_MATCHES_REGEX
                formulaid: B
          description: 'HOST-RESOURCES-MIB::hrStorage discovery with storage filter'
          item_prototypes:
            -
              name: '{#FSNAME}: Free inodes in %'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.4.1.2021.9.1.10["index","1.3.6.1.4.1.2021.9.1.2", "{#FSNAME}"]'
              key: 'vfs.fs.inode.pfree[dskPercentNode.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              description: |
                MIB: UCD-SNMP-MIB
                If having problems collecting this item make sure access to UCD-SNMP-MIB is allowed.
              application_prototypes:
                -
                  name: 'Filesystem {#FSNAME}'
              preprocessing:
                -
                  type: JAVASCRIPT
                  parameters:
                    - 'return (100-value);'
              trigger_prototypes:
                -
                  expression: '{min(5m)}<{$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}'
                  name: '{#FSNAME}: Running out of free inodes (free < {$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}%)'
                  opdata: 'Free inodes: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  description: |
                    It may become impossible to write to disk if there are no index nodes left.
                    As symptoms, 'No space left on device' or 'Disk is full' errors may be seen even though free space is available.
                -
                  expression: '{min(5m)}<{$VFS.FS.INODE.PFREE.MIN.WARN:"{#FSNAME}"}'
                  name: '{#FSNAME}: Running out of free inodes (free < {$VFS.FS.INODE.PFREE.MIN.WARN:"{#FSNAME}"}%)'
                  opdata: 'Free inodes: {ITEM.LASTVALUE1}'
                  priority: WARNING
                  description: |
                    It may become impossible to write to disk if there are no index nodes left.
                    As symptoms, 'No space left on device' or 'Disk is full' errors may be seen even though free space is available.
                  dependencies:
                    -
                      name: '{#FSNAME}: Running out of free inodes (free < {$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}%)'
                      expression: '{Linux filesystems SNMP:vfs.fs.inode.pfree[dskPercentNode.{#SNMPINDEX}].min(5m)}<{$VFS.FS.INODE.PFREE.MIN.CRIT:"{#FSNAME}"}'
            -
              name: '{#FSNAME}: Space utilization'
              type: CALCULATED
              key: 'vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}]'
              history: 7d
              value_type: FLOAT
              units: '%'
              params: '(last("vfs.fs.used[hrStorageUsed.{#SNMPINDEX}]")/last("vfs.fs.total[hrStorageSize.{#SNMPINDEX}]"))*100'
              description: 'Space utilization in % for {#FSNAME}'
              application_prototypes:
                -
                  name: 'Filesystem {#FSNAME}'
            -
              name: '{#FSNAME}: Total space'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.25.2.3.1.5.{#SNMPINDEX}'
              key: 'vfs.fs.total[hrStorageSize.{#SNMPINDEX}]'
              history: 7d
              units: B
              description: |
                MIB: HOST-RESOURCES-MIB
                The size of the storage represented by this entry, in units of hrStorageAllocationUnits.
                This object is writable to allow remote configuration of the size of the storage area in those cases where such an operation makes sense and is possible on the underlying system.
                For example, the amount of main storage allocated to a buffer pool might be modified or the amount of disk space allocated to virtual storage might be modified.
              application_prototypes:
                -
                  name: 'Filesystem {#FSNAME}'
              preprocessing:
                -
                  type: MULTIPLIER
                  parameters:
                    - '{#ALLOC_UNITS}'
            -
              name: '{#FSNAME}: Used space'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.25.2.3.1.6.{#SNMPINDEX}'
              key: 'vfs.fs.used[hrStorageUsed.{#SNMPINDEX}]'
              history: 7d
              units: B
              description: |
                MIB: HOST-RESOURCES-MIB
                The amount of the storage represented by this entry that is allocated, in units of hrStorageAllocationUnits.
              application_prototypes:
                -
                  name: 'Filesystem {#FSNAME}'
              preprocessing:
                -
                  type: MULTIPLIER
                  parameters:
                    - '{#ALLOC_UNITS}'
          trigger_prototypes:
            -
              expression: |
                {Linux filesystems SNMP:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].last()}>{$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"} and
                (({Linux filesystems SNMP:vfs.fs.total[hrStorageSize.{#SNMPINDEX}].last()}-{Linux filesystems SNMP:vfs.fs.used[hrStorageUsed.{#SNMPINDEX}].last()})<5G or {Linux filesystems SNMP:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].timeleft(1h,,100)}<1d)
              name: '{#FSNAME}: Disk space is critically low (used > {$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"}%)'
              opdata: 'Space used: {ITEM.LASTVALUE3} of {ITEM.LASTVALUE2} ({ITEM.LASTVALUE1})'
              priority: AVERAGE
              description: |
                Two conditions should match: First, space utilization should be above {$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"}.
                 Second condition should be one of the following:
                 - The disk free space is less than 5G.
                 - The disk will be full in less than 24 hours.
              manual_close: 'YES'
            -
              expression: |
                {Linux filesystems SNMP:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].last()}>{$VFS.FS.PUSED.MAX.WARN:"{#FSNAME}"} and
                (({Linux filesystems SNMP:vfs.fs.total[hrStorageSize.{#SNMPINDEX}].last()}-{Linux filesystems SNMP:vfs.fs.used[hrStorageUsed.{#SNMPINDEX}].last()})<10G or {Linux filesystems SNMP:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].timeleft(1h,,100)}<1d)
              name: '{#FSNAME}: Disk space is low (used > {$VFS.FS.PUSED.MAX.WARN:"{#FSNAME}"}%)'
              opdata: 'Space used: {ITEM.LASTVALUE3} of {ITEM.LASTVALUE2} ({ITEM.LASTVALUE1})'
              priority: WARNING
              description: |
                Two conditions should match: First, space utilization should be above {$VFS.FS.PUSED.MAX.WARN:"{#FSNAME}"}.
                 Second condition should be one of the following:
                 - The disk free space is less than 10G.
                 - The disk will be full in less than 24 hours.
              manual_close: 'YES'
              dependencies:
                -
                  name: '{#FSNAME}: Disk space is critically low (used > {$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"}%)'
                  expression: |
                    {Linux filesystems SNMP:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].last()}>{$VFS.FS.PUSED.MAX.CRIT:"{#FSNAME}"} and
                    (({Linux filesystems SNMP:vfs.fs.total[hrStorageSize.{#SNMPINDEX}].last()}-{Linux filesystems SNMP:vfs.fs.used[hrStorageUsed.{#SNMPINDEX}].last()})<5G or {Linux filesystems SNMP:vfs.fs.pused[storageUsedPercentage.{#SNMPINDEX}].timeleft(1h,,100)}<1d)
          graph_prototypes:
            -
              name: '{#FSNAME}: Disk space usage'
              width: '600'
              height: '340'
              type: PIE
              show_3d: 'YES'
              graph_items:
                -
                  color: '969696'
                  calc_fnc: LAST
                  type: GRAPH_SUM
                  item:
                    host: 'Linux filesystems SNMP'
                    key: 'vfs.fs.total[hrStorageSize.{#SNMPINDEX}]'
                -
                  sortorder: '1'
                  color: C80000
                  calc_fnc: LAST
                  item:
                    host: 'Linux filesystems SNMP'
                    key: 'vfs.fs.used[hrStorageUsed.{#SNMPINDEX}]'
      macros:
        -
          macro: '{$VFS.FS.FSNAME.MATCHES}'
          value: .+
          description: 'This macro is used in filesystems discovery. Can be overridden on the host or linked template level'
        -
          macro: '{$VFS.FS.FSNAME.NOT_MATCHES}'
          value: ^(/dev|/sys|/run|/proc|.+/shm$)
          description: 'This macro is used in filesystems discovery. Can be overridden on the host or linked template level'
        -
          macro: '{$VFS.FS.FSTYPE.MATCHES}'
          value: '.*(\.4|\.9|hrStorageFixedDisk|hrStorageFlashMemory)$'
          description: 'This macro is used in filesystems discovery. Can be overridden on the host or linked template level'
        -
          macro: '{$VFS.FS.FSTYPE.NOT_MATCHES}'
          value: ^\s$
          description: 'This macro is used in filesystems discovery. Can be overridden on the host or linked template level'
        -
          macro: '{$VFS.FS.INODE.PFREE.MIN.CRIT}'
          value: '10'
        -
          macro: '{$VFS.FS.INODE.PFREE.MIN.WARN}'
          value: '20'
        -
          macro: '{$VFS.FS.PUSED.MAX.CRIT}'
          value: '90'
        -
          macro: '{$VFS.FS.PUSED.MAX.WARN}'
          value: '80'
    -
      template: 'Linux memory SNMP'
      name: 'Linux memory SNMP'
      description: |
        MIBs used:
        UCD-SNMP-MIB
        
        Known Issues:
        
          Description: Please note that memory utilization is a rough estimate, since memory available is calculated as free+buffers+cached, which is not 100% accurate, but the best we can get using SNMP.
        
        Template tooling version used: 0.38
      groups:
        -
          name: Templates/Modules
      applications:
        -
          name: Memory
      items:
        -
          name: 'Free swap space'
          type: SNMP_AGENT
          snmp_oid: 1.3.6.1.4.1.2021.4.4.0
          key: 'system.swap.free[memAvailSwap.0]'
          history: 7d
          units: B
          description: |
            MIB: UCD-SNMP-MIB
            The amount of swap space currently unused or available.
          applications:
            -
              name: Memory
          preprocessing:
            -
              type: MULTIPLIER
              parameters:
                - '1024'
        -
          name: 'Free swap space in %'
          type: CALCULATED
          key: 'system.swap.pfree[snmp]'
          history: 7d
          value_type: FLOAT
          units: '%'
          params: 'last("system.swap.free[memAvailSwap.0]")/last("system.swap.total[memTotalSwap.0]")*100'
          description: 'The free space of swap volume/file in percent.'
          applications:
            -
              name: Memory
        -
          name: 'Total swap space'
          type: SNMP_AGENT
          snmp_oid: 1.3.6.1.4.1.2021.4.3.0
          key: 'system.swap.total[memTotalSwap.0]'
          history: 7d
          units: B
          description: |
            MIB: UCD-SNMP-MIB
            The total amount of swap space configured for this host.
          applications:
            -
              name: Memory
          preprocessing:
            -
              type: MULTIPLIER
              parameters:
                - '1024'
        -
          name: 'Available memory'
          type: CALCULATED
          key: 'vm.memory.available[snmp]'
          history: 7d
          units: B
          params: 'last("vm.memory.free[memAvailReal.0]")+last("vm.memory.buffers[memBuffer.0]")+last("vm.memory.cached[memCached.0]")'
          description: 'Please note that memory utilization is a rough estimate, since memory available is calculated as free+buffers+cached, which is not 100% accurate, but the best we can get using SNMP.'
          applications:
            -
              name: Memory
        -
          name: 'Memory (buffers)'
          type: SNMP_AGENT
          snmp_oid: 1.3.6.1.4.1.2021.4.14.0
          key: 'vm.memory.buffers[memBuffer.0]'
          history: 7d
          units: B
          description: |
            MIB: UCD-SNMP-MIB
            Memory used by kernel buffers (Buffers in /proc/meminfo)
          applications:
            -
              name: Memory
          preprocessing:
            -
              type: MULTIPLIER
              parameters:
                - '1024'
        -
          name: 'Memory (cached)'
          type: SNMP_AGENT
          snmp_oid: 1.3.6.1.4.1.2021.4.15.0
          key: 'vm.memory.cached[memCached.0]'
          history: 7d
          units: B
          description: |
            MIB: UCD-SNMP-MIB
            Memory used by the page cache and slabs (Cached and Slab in /proc/meminfo)
          applications:
            -
              name: Memory
          preprocessing:
            -
              type: MULTIPLIER
              parameters:
                - '1024'
        -
          name: 'Free memory'
          type: SNMP_AGENT
          snmp_oid: 1.3.6.1.4.1.2021.4.6.0
          key: 'vm.memory.free[memAvailReal.0]'
          history: 7d
          units: B
          description: 'MIB: UCD-SNMP-MIB'
          applications:
            -
              name: Memory
          preprocessing:
            -
              type: MULTIPLIER
              parameters:
                - '1024'
        -
          name: 'Total memory'
          type: SNMP_AGENT
          snmp_oid: 1.3.6.1.4.1.2021.4.5.0
          key: 'vm.memory.total[memTotalReal.0]'
          history: 7d
          units: B
          description: |
            MIB: UCD-SNMP-MIB
            Total memory in Bytes
          applications:
            -
              name: Memory
          preprocessing:
            -
              type: MULTIPLIER
              parameters:
                - '1024'
        -
          name: 'Memory utilization'
          type: CALCULATED
          key: 'vm.memory.util[snmp]'
          history: 7d
          value_type: FLOAT
          units: '%'
          params: '(last("vm.memory.total[memTotalReal.0]")-(last("vm.memory.free[memAvailReal.0]")+last("vm.memory.buffers[memBuffer.0]")+last("vm.memory.cached[memCached.0]")))/last("vm.memory.total[memTotalReal.0]")*100'
          description: 'Please note that memory utilization is a rough estimate, since memory available is calculated as free+buffers+cached, which is not 100% accurate, but the best we can get using SNMP.'
          applications:
            -
              name: Memory
          triggers:
            -
              expression: '{min(5m)}>{$MEMORY.UTIL.MAX}'
              name: 'High memory utilization ( >{$MEMORY.UTIL.MAX}% for 5m)'
              priority: AVERAGE
              description: 'The system is running out of free memory.'
              dependencies:
                -
                  name: 'Lack of available memory ( < {$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})'
                  expression: '{Linux memory SNMP:vm.memory.available[snmp].min(5m)}<{$MEMORY.AVAILABLE.MIN} and {Linux memory SNMP:vm.memory.total[memTotalReal.0].last()}>0'
      macros:
        -
          macro: '{$MEMORY.AVAILABLE.MIN}'
          value: 20M
        -
          macro: '{$MEMORY.UTIL.MAX}'
          value: '90'
        -
          macro: '{$SWAP.PFREE.MIN.WARN}'
          value: '50'
    -
      template: 'Linux SNMP'
      name: 'Linux SNMP'
      description: |
        Template OS Linux
        
        You can discuss this template or leave feedback on our forum https://www.zabbix.com/forum/zabbix-suggestions-and-feedback/387225-discussion-thread-for-official-zabbix-template-for-linux
        
        Template tooling version used: 0.38
      templates:
        -
          name: 'EtherLike-MIB SNMP'
        -
          name: 'Generic SNMP'
        -
          name: 'Interfaces SNMP'
        -
          name: 'Linux block devices SNMP'
        -
          name: 'Linux CPU SNMP'
        -
          name: 'Linux filesystems SNMP'
        -
          name: 'Linux memory SNMP'
      groups:
        -
          name: 'Templates/Operating systems'
      dashboards:
        -
          name: 'System performance'
          widgets:
            -
              type: GRAPH_CLASSIC
              width: '12'
              height: '5'
              fields:
                -
                  type: INTEGER
                  name: source_type
                  value: '0'
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'System load'
                    host: 'Linux SNMP'
            -
              type: GRAPH_PROTOTYPE
              x: '12'
              width: '12'
              height: '5'
              fields:
                -
                  type: INTEGER
                  name: columns
                  value: '1'
                -
                  type: INTEGER
                  name: rows
                  value: '1'
                -
                  type: INTEGER
                  name: source_type
                  value: '2'
                -
                  type: GRAPH_PROTOTYPE
                  name: graphid
                  value:
                    name: 'CPU usage{#SINGLETON}'
                    host: 'Linux SNMP'
            -
              type: GRAPH_CLASSIC
              'y': '5'
              width: '12'
              height: '5'
              fields:
                -
                  type: INTEGER
                  name: source_type
                  value: '0'
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'Memory usage'
                    host: 'Linux SNMP'
            -
              type: GRAPH_CLASSIC
              x: '12'
              'y': '5'
              width: '12'
              height: '5'
              fields:
                -
                  type: INTEGER
                  name: source_type
                  value: '0'
                -
                  type: GRAPH
                  name: graphid
                  value:
                    name: 'Swap usage'
                    host: 'Linux SNMP'
            -
              type: GRAPH_PROTOTYPE
              'y': '10'
              width: '24'
              height: '5'
              fields:
                -
                  type: INTEGER
                  name: columns
                  value: '1'
                -
                  type: INTEGER
                  name: rows
                  value: '1'
                -
                  type: INTEGER
                  name: source_type
                  value: '2'
                -
                  type: GRAPH_PROTOTYPE
                  name: graphid
                  value:
                    name: '{#FSNAME}: Disk space usage'
                    host: 'Linux SNMP'
            -
              type: GRAPH_PROTOTYPE
              'y': '15'
              width: '24'
              height: '5'
              fields:
                -
                  type: INTEGER
                  name: columns
                  value: '1'
                -
                  type: INTEGER
                  name: rows
                  value: '1'
                -
                  type: INTEGER
                  name: source_type
                  value: '2'
                -
                  type: GRAPH_PROTOTYPE
                  name: graphid
                  value:
                    name: '{#DEVNAME}: Disk read/write rates'
                    host: 'Linux SNMP'
            -
              type: GRAPH_PROTOTYPE
              'y': '20'
              width: '24'
              height: '5'
              fields:
                -
                  type: INTEGER
                  name: columns
                  value: '1'
                -
                  type: INTEGER
                  name: rows
                  value: '1'
                -
                  type: INTEGER
                  name: source_type
                  value: '3'
                -
                  type: ITEM_PROTOTYPE
                  name: itemid
                  value:
                    key: 'vfs.dev.util[diskIOLA1.{#SNMPINDEX}]'
                    host: 'Linux SNMP'
            -
              type: GRAPH_PROTOTYPE
              'y': '25'
              width: '24'
              height: '5'
              fields:
                -
                  type: INTEGER
                  name: columns
                  value: '1'
                -
                  type: INTEGER
                  name: rows
                  value: '1'
                -
                  type: INTEGER
                  name: source_type
                  value: '2'
                -
                  type: GRAPH_PROTOTYPE
                  name: graphid
                  value:
                    name: 'Interface {#IFNAME}({#IFALIAS}): Network traffic'
                    host: 'Linux SNMP'
  triggers:
    -
      expression: '{Linux memory SNMP:system.swap.pfree[snmp].min(5m)}<{$SWAP.PFREE.MIN.WARN} and {Linux memory SNMP:system.swap.total[memTotalSwap.0].last()}>0'
      name: 'High swap space usage ( less than {$SWAP.PFREE.MIN.WARN}% free)'
      opdata: 'Free: {ITEM.LASTVALUE1}, total: {ITEM.LASTVALUE2}'
      priority: WARNING
      description: 'This trigger is ignored, if there is no swap configured'
      dependencies:
        -
          name: 'High memory utilization ( >{$MEMORY.UTIL.MAX}% for 5m)'
          expression: '{Linux memory SNMP:vm.memory.util[snmp].min(5m)}>{$MEMORY.UTIL.MAX}'
        -
          name: 'Lack of available memory ( < {$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})'
          expression: '{Linux memory SNMP:vm.memory.available[snmp].min(5m)}<{$MEMORY.AVAILABLE.MIN} and {Linux memory SNMP:vm.memory.total[memTotalReal.0].last()}>0'
    -
      expression: '{Linux memory SNMP:vm.memory.available[snmp].min(5m)}<{$MEMORY.AVAILABLE.MIN} and {Linux memory SNMP:vm.memory.total[memTotalReal.0].last()}>0'
      name: 'Lack of available memory ( < {$MEMORY.AVAILABLE.MIN} of {ITEM.VALUE2})'
      opdata: 'Available: {ITEM.LASTVALUE1}, total: {ITEM.LASTVALUE2}'
      priority: AVERAGE
    -
      expression: |
        {Linux CPU SNMP:system.cpu.load.avg1[laLoad.1].min(5m)}/{Linux CPU SNMP:system.cpu.num[snmp].last()}>{$LOAD_AVG_PER_CPU.MAX.WARN}
        and {Linux CPU SNMP:system.cpu.load.avg5[laLoad.2].last()}>0
        and {Linux CPU SNMP:system.cpu.load.avg15[laLoad.3].last()}>0
      name: 'Load average is too high (per CPU load over {$LOAD_AVG_PER_CPU.MAX.WARN} for 5m)'
      opdata: 'Load averages(1m 5m 15m): ({ITEM.LASTVALUE1} {ITEM.LASTVALUE3} {ITEM.LASTVALUE4}), # of CPUs: {ITEM.LASTVALUE2}'
      priority: AVERAGE
      description: 'Per CPU load average is too high. Your system may be slow to respond.'
  graphs:
    -
      name: 'CPU jumps'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Linux CPU SNMP'
            key: 'system.cpu.switches[ssRawContexts.0]'
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Linux CPU SNMP'
            key: 'system.cpu.intr[ssRawInterrupts.0]'
    -
      name: 'Memory usage'
      ymin_type_1: FIXED
      graph_items:
        -
          drawtype: BOLD_LINE
          color: 1A7C11
          item:
            host: 'Linux memory SNMP'
            key: 'vm.memory.total[memTotalReal.0]'
        -
          sortorder: '1'
          drawtype: GRADIENT_LINE
          color: 2774A4
          item:
            host: 'Linux memory SNMP'
            key: 'vm.memory.available[snmp]'
    -
      name: 'Memory utilization'
      ymin_type_1: FIXED
      ymax_type_1: FIXED
      graph_items:
        -
          drawtype: GRADIENT_LINE
          color: 1A7C11
          item:
            host: 'Linux memory SNMP'
            key: 'vm.memory.util[snmp]'
    -
      name: 'Swap usage'
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Linux memory SNMP'
            key: 'system.swap.free[memAvailSwap.0]'
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Linux memory SNMP'
            key: 'system.swap.total[memTotalSwap.0]'
    -
      name: 'System load'
      ymin_type_1: FIXED
      graph_items:
        -
          color: 1A7C11
          item:
            host: 'Linux CPU SNMP'
            key: 'system.cpu.load.avg1[laLoad.1]'
        -
          sortorder: '1'
          color: 2774A4
          item:
            host: 'Linux CPU SNMP'
            key: 'system.cpu.load.avg5[laLoad.2]'
        -
          sortorder: '2'
          color: F63100
          item:
            host: 'Linux CPU SNMP'
            key: 'system.cpu.load.avg15[laLoad.3]'
        -
          sortorder: '3'
          color: A54F10
          yaxisside: RIGHT
          item:
            host: 'Linux CPU SNMP'
            key: 'system.cpu.num[snmp]'
