zabbix_export:
  version: '5.2'
  date: '2020-10-16T09:33:34Z'
  groups:
    -
      name: 'Templates/Network devices'
  templates:
    -
      template: 'Mellanox SNMP'
      name: 'Mellanox SNMP'
      description: |
        Template Net Mellanox
        
        MIBs used:
        ENTITY-SENSORS-MIB
        ENTITY-STATE-MIB
        ENTITY-MIB
        
        Template tooling version used: 0.38
      templates:
        -
          name: 'Generic SNMP'
        -
          name: 'HOST-RESOURCES-MIB SNMP'
        -
          name: 'Interfaces SNMP'
      groups:
        -
          name: 'Templates/Network devices'
      applications:
        -
          name: Fans
        -
          name: Inventory
        -
          name: 'Power supply'
        -
          name: Temperature
      discovery_rules:
        -
          name: 'Entity Discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7]'
          key: entity.discovery
          delay: 1h
          filter:
            conditions:
              -
                macro: '{#ENT_CLASS}'
                value: '3'
                formulaid: A
          item_prototypes:
            -
              name: '{#ENT_NAME}: Hardware model name'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.47.1.1.1.1.13.{#SNMPINDEX}'
              key: 'system.hw.model[entPhysicalModelName.{#SNMPINDEX}]'
              delay: 1h
              history: 2w
              trends: '0'
              value_type: CHAR
              description: 'MIB: ENTITY-MIB'
              applications:
                -
                  name: Inventory
              preprocessing:
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
            -
              name: '{#ENT_NAME}: Hardware serial number'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.47.1.1.1.1.11.{#SNMPINDEX}'
              key: 'system.hw.serialnumber[entPhysicalSerialNum.{#SNMPINDEX}]'
              delay: 1h
              history: 2w
              trends: '0'
              value_type: CHAR
              description: 'MIB: ENTITY-MIB'
              applications:
                -
                  name: Inventory
              preprocessing:
                -
                  type: DISCARD_UNCHANGED_HEARTBEAT
                  parameters:
                    - 1d
              trigger_prototypes:
                -
                  expression: '{diff()}=1 and {strlen()}>0'
                  name: '{#ENT_NAME}: Device has been replaced (new serial number received)'
                  priority: INFO
                  description: 'Device serial number has changed. Ack to close'
                  manual_close: 'YES'
        -
          name: 'Fan Discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#SNMPVALUE},1.3.6.1.2.1.99.1.1.1.1,{#SENSOR_INFO},1.3.6.1.2.1.47.1.1.1.1.2]'
          key: fan.discovery
          delay: 1h
          filter:
            evaltype: OR
            conditions:
              -
                macro: '{#SNMPVALUE}'
                value: '10'
                formulaid: A
          description: 'ENTITY-SENSORS-MIB::EntitySensorDataType discovery with rpm filter'
          item_prototypes:
            -
              name: '{#SENSOR_INFO}: Fan speed'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}'
              key: 'sensor.fan.speed[entPhySensorValue.{#SNMPINDEX}]'
              units: rpm
              description: |
                MIB: ENTITY-SENSORS-MIB
                The most recent measurement obtained by the agent for this sensor.
                To correctly interpret the value of this object, the associated entPhySensorType,
                entPhySensorScale, and entPhySensorPrecision objects must also be examined.
              applications:
                -
                  name: Fans
            -
              name: '{#SENSOR_INFO}: Fan status'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.99.1.1.1.5.{#SNMPINDEX}'
              key: 'sensor.fan.status[entPhySensorOperStatus.{#SNMPINDEX}]'
              delay: 3m
              history: 2w
              trends: 0d
              description: |
                MIB: ENTITY-SENSORS-MIB
                The operational status of the sensor {#SENSOR_INFO}
              applications:
                -
                  name: Fans
              valuemap:
                name: 'ENTITY-SENSORS-MIB::EntitySensorStatus'
              trigger_prototypes:
                -
                  expression: '{count(#1,{$FAN_CRIT_STATUS},eq)}=1'
                  name: '{#SENSOR_INFO}: Fan is in critical state'
                  opdata: 'Current state: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  description: 'Please check the fan unit'
        -
          name: 'PSU Discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#ENT_CLASS},1.3.6.1.2.1.47.1.1.1.1.5,{#ENT_NAME},1.3.6.1.2.1.47.1.1.1.1.7]'
          key: psu.discovery
          delay: 1h
          filter:
            conditions:
              -
                macro: '{#ENT_CLASS}'
                value: '6'
                formulaid: A
          item_prototypes:
            -
              name: '{#ENT_NAME}: Power supply status'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.131.1.1.1.3.{#SNMPINDEX}'
              key: 'sensor.psu.status[entStateOper.{#SNMPINDEX}]'
              delay: 3m
              history: 2w
              trends: 0d
              description: 'MIB: ENTITY-STATE-MIB'
              applications:
                -
                  name: 'Power supply'
              valuemap:
                name: 'ENTITY-STATE-MIB::EntityOperState'
              trigger_prototypes:
                -
                  expression: '{count(#1,{$PSU_CRIT_STATUS},eq)}=1'
                  name: '{#ENT_NAME}: Power supply is in critical state'
                  opdata: 'Current state: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
                  description: 'Please check the power supply unit for errors'
        -
          name: 'Temperature Discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#SENSOR_TYPE},1.3.6.1.2.1.99.1.1.1.1,{#SENSOR_INFO},1.3.6.1.2.1.47.1.1.1.1.2,{#SENSOR_PRECISION},1.3.6.1.2.1.99.1.1.1.3]'
          key: temp.discovery
          delay: 1h
          filter:
            evaltype: AND
            conditions:
              -
                macro: '{#SENSOR_TYPE}'
                value: '8'
                formulaid: B
              -
                macro: '{#SENSOR_PRECISION}'
                value: '1'
                formulaid: A
          description: 'ENTITY-SENSORS-MIB::EntitySensorDataType discovery with celsius filter'
          item_prototypes:
            -
              name: '{#SENSOR_INFO}: Temperature status'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.99.1.1.1.5.{#SNMPINDEX}'
              key: 'sensor.temp.status[entPhySensorOperStatus.{#SNMPINDEX}]'
              delay: 3m
              history: 2w
              trends: 0d
              description: |
                MIB: ENTITY-SENSORS-MIB
                The operational status of the sensor {#SENSOR_INFO}
              applications:
                -
                  name: Temperature
              valuemap:
                name: 'ENTITY-SENSORS-MIB::EntitySensorStatus'
            -
              name: '{#SENSOR_INFO}: Temperature'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.99.1.1.1.4.{#SNMPINDEX}'
              key: 'sensor.temp.value[entPhySensorValue.{#SNMPINDEX}]'
              delay: 3m
              value_type: FLOAT
              units: Â°C
              description: |
                MIB: ENTITY-SENSORS-MIB
                The most recent measurement obtained by the agent for this sensor.
                To correctly interpret the value of this object, the associated entPhySensorType,
                entPhySensorScale, and entPhySensorPrecision objects must also be examined.
              applications:
                -
                  name: Temperature
              preprocessing:
                -
                  type: MULTIPLIER
                  parameters:
                    - '0.1'
              trigger_prototypes:
                -
                  expression: '{avg(5m)}>{$TEMP_CRIT:""}'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: '{max(5m)}<{$TEMP_CRIT:""}-3'
                  name: '{#SENSOR_INFO}: Temperature is above critical threshold: >{$TEMP_CRIT:""}'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: HIGH
                  description: 'This trigger uses temperature sensor values as well as temperature sensor status if available'
                -
                  expression: '{avg(5m)}<{$TEMP_CRIT_LOW:""}'
                  recovery_mode: RECOVERY_EXPRESSION
                  recovery_expression: '{min(5m)}>{$TEMP_CRIT_LOW:""}+3'
                  name: '{#SENSOR_INFO}: Temperature is too low: <{$TEMP_CRIT_LOW:""}'
                  opdata: 'Current value: {ITEM.LASTVALUE1}'
                  priority: AVERAGE
          trigger_prototypes:
            -
              expression: |
                {Mellanox SNMP:sensor.temp.value[entPhySensorValue.{#SNMPINDEX}].avg(5m)}>{$TEMP_WARN:""}
                or
                {Mellanox SNMP:sensor.temp.status[entPhySensorOperStatus.{#SNMPINDEX}].last(0)}={$TEMP_WARN_STATUS}
              recovery_mode: RECOVERY_EXPRESSION
              recovery_expression: '{Mellanox SNMP:sensor.temp.value[entPhySensorValue.{#SNMPINDEX}].max(5m)}<{$TEMP_WARN:""}-3'
              name: '{#SENSOR_INFO}: Temperature is above warning threshold: >{$TEMP_WARN:""}'
              opdata: 'Current value: {ITEM.LASTVALUE1}'
              priority: WARNING
              description: 'This trigger uses temperature sensor values as well as temperature sensor status if available'
              dependencies:
                -
                  name: '{#SENSOR_INFO}: Temperature is above critical threshold: >{$TEMP_CRIT:""}'
                  expression: '{Mellanox SNMP:sensor.temp.value[entPhySensorValue.{#SNMPINDEX}].avg(5m)}>{$TEMP_CRIT:""}'
                  recovery_expression: '{Mellanox SNMP:sensor.temp.value[entPhySensorValue.{#SNMPINDEX}].max(5m)}<{$TEMP_CRIT:""}-3'
      macros:
        -
          macro: '{$FAN_CRIT_STATUS}'
          value: '3'
        -
          macro: '{$PSU_CRIT_STATUS}'
          value: '2'
        -
          macro: '{$TEMP_CRIT}'
          value: '60'
        -
          macro: '{$TEMP_CRIT_LOW}'
          value: '5'
        -
          macro: '{$TEMP_WARN}'
          value: '50'
        -
          macro: '{$TEMP_WARN_STATUS}'
          value: '3'
  value_maps:
    -
      name: 'ENTITY-SENSORS-MIB::EntitySensorStatus'
      mappings:
        -
          value: '1'
          newvalue: ok
        -
          value: '2'
          newvalue: unavailable
        -
          value: '3'
          newvalue: nonoperational
    -
      name: 'ENTITY-STATE-MIB::EntityOperState'
      mappings:
        -
          value: '1'
          newvalue: unknown
        -
          value: '2'
          newvalue: disabled
        -
          value: '3'
          newvalue: enabled
        -
          value: '4'
          newvalue: testing
