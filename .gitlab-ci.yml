.build_go: &build_go
    - wget --no-verbose "https://golang.org/dl/go1.16.2.linux-amd64.tar.gz"
    - rm -rf /usr/local/go; tar -C /usr/local -xzf go1.16.2.linux-amd64.tar.gz
    - export PATH=$PATH:/usr/local/go/bin
    - go version

.build_glbmap: &build_glbmap
    - git clone https://gitlab.com/mikler/glbmap.git
    - cd glbmap && cmake . && make -j4
    - mv src/zmap src/glbmap && chmod +s src/glbmap
    - cd ${CI_PROJECT_DIR}
    - pwd && ls

.set_glb_version: &set_glb_version
    - export GLABER_VERSION=`cat include/version.h | grep "GLABER_VERSION" | grep -Po "(\d+\.\d+\.\d+)"`
    - echo $GLABER_VERSION

.prepare_sources: &prepare_sources
    - *set_glb_version
    - ./bootstrap.sh
    - ./configure
    - make dbschema gettext
    - autoreconf -fvi
    - cp -r build/${OS}/${OS_VER}/ debian && cd debian
    - sed -i "1 s/\d+\.\d+\.\d+/$GLABER_VERSION/g" changelog

.apply_glb_version_deb: &aaply_glb_version
    - 

.install_common_apt: &install_common_apt
    - apt-get update
    - apt-get --ignore-missing install -y sshpass build-essential cmake libgmp3-dev gengetopt libpcap-dev flex byacc libjson-c-dev pkg-config libunistring-dev dpkg-dev devscripts wget git gcc automake dh-make build-essential autoconf autotools-dev quilt pkg-config libsnmp-dev libpq-dev libsqlite3-dev libcurl4-openssl-dev libldap2-dev libiksemel-dev libopenipmi-dev libssh2-1-dev unixodbc-dev default-jdk libxml2-dev libpcre3-dev libevent-dev curl libssl-dev

.upload_packages: &upload_packages
  - sshpass -p ${SCP_PASS} scp -o StrictHostKeyChecking=no -r /builds/mikler/glaber*.deb ${SCP_USER}@glaber.io:~/${OS}/${OS_VER}

debian-buster:
  variables:
    OS: debian
    OS_VER: buster  
  image: ${OS}:${OS_VER}
  only:
    - master
  script:
    - *install_common_apt 
    - apt-get install -y libmariadb-dev default-libmysqlclient-dev libssh-dev sass
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b --no-sign
    - *upload_packages

debian-bullseye:
  variables:
    OS: debian
    OS_VER: bullseye
  image: ${OS}:${OS_VER}
  only:
    - master
  script:
    - *install_common_apt 
    - apt-get install -y libmariadb-dev default-libmysqlclient-dev libssh-dev sass
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b --no-sign
    - *upload_packages

debian-stretch:
  variables:
    OS: debian
    OS_VER: stretch
  image: ${OS}:${OS_VER}
  only:
    - master
  script:
    - *install_common_apt 
    - apt-get install -y sass  default-libmysqlclient-dev 
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b --no-sign
    - *upload_packages

debian-jessie:
  variables:
    OS: debian
    OS_VER: jessie
  image: ${OS}:${OS_VER}
  only:
    - master
  script:
    - *install_common_apt 
    - apt-get install -y libmysqlclient-dev ruby-sass libc6-dev
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b -us
    - *upload_packages

ubuntu-focal:
  variables:
    OS: ubuntu
    OS_VER: focal
  image: ${OS}:${OS_VER}
  only:
    - master
  script:
    - apt-get update
    - *install_common_apt
    - apt-get --ignore-missing install -y default-libmysqlclient-dev libssh-dev sass
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b --no-sign
    - *upload_packages

ubuntu-bionic:
  variables:
    OS: ubuntu
    OS_VER: bionic
  image: ${OS}:${OS_VER}
  only:
    - master
  script:
    - *install_common_apt
    - apt-get --ignore-missing install -y default-libmysqlclient-dev libssh-dev sass
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b --no-sign
    - *upload_packages

ubuntu-xenial:
  variables:
    OS: ubuntu
    OS_VER: xenial
  image: ${OS}:${OS_VER}
  only:
    - master
  script:
    - *install_common_apt
    - apt-get install -y libmysqlclient-dev sass
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b -us
    - *upload_packages


centos-8:
  variables:
    OS: centos
    OS_VER: 8
  image: ${OS}:${OS_VER}
  only:
    - master
  script:
    - yum install -y rpm-build yum-utils xz wget tar curl createrepo
    - yum groupinstall "Development Tools" -y

#centos7:
#  <<: *build_rpm
#  image: centos:7
#  variables:
#    CENTOS: 7

#centos8:
 # <<: *build_rpm
 # image: centos:8
 # variables:
 #   CENTOS: 8
 # before_script:
 #   - dnf -y install dnf-plugins-core epel-release
 #   - dnf config-manager --set-enabled powertools
 #   - dnf -y install OpenIPMI-devel


