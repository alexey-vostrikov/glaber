workflow:
  rules:
    - if: '$CI_COMMIT_TAG != null'
      variables:
        REPO_DIR: "repo"
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        REPO_DIR: "repo-testing"
    - if: $CI_COMMIT_REF_NAME =~ /experimental/
      variables:
        REPO_DIR: "repo-experimental"
    - when: never


.build_go: &build_go
    - wget --no-verbose "https://golang.org/dl/go1.16.2.linux-amd64.tar.gz"
    - rm -rf /usr/local/go; tar -C /usr/local -xzf go1.16.2.linux-amd64.tar.gz
    - rm ./go1.16.2.linux-amd64.tar.gz
    - export PATH=$PATH:/usr/local/go/bin
    - go version

.build_glbmap: &build_glbmap
    - git clone https://gitlab.com/mikler/glbmap.git
    - cd glbmap && cmake . && make -j4
    - mv src/zmap src/glbmap && chmod +s src/glbmap
    - cd ${CI_PROJECT_DIR}
    
.set_glb_version: &set_glb_version
    - export GLABER_VERSION=`cat include/version.h | grep "GLABER_VERSION" | grep -Po "(\d+\.\d+\.\d+)"`
    - echo $GLABER_VERSION

.prepare_sources: &prepare_sources
    - *set_glb_version
    - ./bootstrap.sh
    - ./configure
    - make dbschema gettext
    - autoreconf -fvi
    - cp -r build/${OS}/${OS_VER}/ debian && cd debian
    - sed -i "1 s/(.*+/(1:$GLABER_VERSION-${CI_COMMIT_SHORT_SHA}+/g" changelog
    - head -n 5 changelog

.prepare_rpm_sources: &prepare_rpm_sources
    - *set_glb_version
    - ./bootstrap.sh
    - ./configure
    - make dbschema gettext
    - autoreconf -fvi
    - cd ..
    - cp -r glaber glaber-$GLABER_VERSION
    - cd glaber-$GLABER_VERSION
    - git clone https://gitlab.com/mikler/glbmap.git
    - cd glbmap && cmake . && make -j4
    - mv src/zmap ../zmap &&  cd ..
    - rm -rf glbmap
    - mv zmap glbmap && chmod +s ./glbmap && cd ..
    - tar -czvf glaber-$GLABER_VERSION.tar.gz glaber-$GLABER_VERSION
    - cd ${CI_PROJECT_DIR}
    - cp -r build/${OS}/${OS_VER}/* build/centos
    - mv ../glaber-$GLABER_VERSION.tar.gz build/centos/SOURCES/glaber-$GLABER_VERSION.tar.gz
    - sed -i "2 s/Version:.*/Version:\t$GLABER_VERSION/g" build/centos/SPECS/zabbix.spec

.install_common_apt: &install_common_apt
    - apt-get update
    - apt-get --ignore-missing install -y sshpass build-essential cmake libgmp3-dev gengetopt libpcap-dev flex byacc libjson-c-dev pkg-config libunistring-dev dpkg-dev devscripts wget git gcc automake dh-make build-essential autoconf autotools-dev quilt pkg-config libsnmp-dev libpq-dev libsqlite3-dev libcurl4-openssl-dev libldap2-dev libiksemel-dev libopenipmi-dev libssh2-1-dev unixodbc-dev default-jdk libxml2-dev libpcre3-dev libevent-dev curl libssl-dev

.upload_packages: &upload_packages
  - echo "Will upload to '$REPO_DIR' repo"
  - sshpass -p ${SCP_PASS} scp -o StrictHostKeyChecking=no -r /builds/mikler/glaber*.deb ${SCP_USER}@glaber.io:~/$REPO_DIR/${OS}/${OS_VER}
  - sshpass -p ${SCP_PASS} ssh -T ${SCP_USER}@glaber.io  "reprepro --confdir /etc/reprepro/conf --dbdir /var/reprepro/$REPO_DIR --outdir /var/www/glaber.io/$REPO_DIR/${OS}/ includedeb ${OS_VER}  ~/$REPO_DIR/${OS}/${OS_VER}/*.deb"
  - sshpass -p ${SCP_PASS} ssh -T ${SCP_USER}@glaber.io  "rm ~/$REPO_DIR/${OS}/${OS_VER}/*.deb"


.upload_rpms: &upload_rpms
  - echo "Will upload to '$REPO_DIR' repo"
  - sshpass -p ${SCP_PASS} scp -o StrictHostKeyChecking=no -r /root/rpmbuild/RPMS/* ${SCP_USER}@glaber.io:/var/www/glaber.io/$REPO_DIR/rhel/${OS_VER}/RPMS/
  - sshpass -p ${SCP_PASS} ssh -T ${SCP_USER}@glaber.io  "cd /var/www/glaber.io/$REPO_DIR/rhel/${OS_VER} && createrepo ."

debian-buster:
  variables:
    OS: debian
    OS_VER: buster  
  image: ${OS}:${OS_VER}
  script:
    - *install_common_apt 
    - apt-get install -y libmariadb-dev default-libmysqlclient-dev libssh-dev sass
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b --no-sign
    - *upload_packages

debian-bullseye:
  variables:
    OS: debian
    OS_VER: bullseye
  image: ${OS}:${OS_VER}
  script:
    - *install_common_apt 
    - apt-get install -y libmariadb-dev default-libmysqlclient-dev libssh-dev sass
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b --no-sign
    - *upload_packages

ubuntu-focal:
  variables:
    OS: ubuntu
    OS_VER: focal
  image: ${OS}:${OS_VER}
  script:
    - apt-get update
    - *install_common_apt
    - apt-get --ignore-missing install -y default-libmysqlclient-dev libssh-dev sass
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b --no-sign
    - *upload_packages

ubuntu-bionic:
  variables:
    OS: ubuntu
    OS_VER: bionic
  image: ${OS}:${OS_VER}
  script:
    - *install_common_apt
    - apt-get --ignore-missing install -y default-libmysqlclient-dev libssh-dev sass
    - *build_go
    - *prepare_sources
    - *build_glbmap
    - dpkg-buildpackage -b --no-sign
    - *upload_packages

centos-8:
  variables:
    OS: centos
    OS_VER: 8
  image: almalinux:${OS_VER}
  script:
    - dnf -y install dnf-plugins-core epel-release
    - dnf config-manager --set-enabled powertools
    - dnf -y install OpenIPMI-devel
    - dnf -y install libarchive
    - yum groupinstall "Development Tools" -y
    - yum install -y rpm-build yum-utils xz wget tar curl cmake json-c-devel gengetopt libunistring-devel libpcap-devel gmp-devel sshpass
    - *build_go
    - *prepare_rpm_sources
    - cd build/centos
    - yum-builddep -y SPECS/zabbix.spec
    - rpmbuild -bb SPECS/zabbix.spec --define "_sourcedir $PWD/SOURCES" --define "glaber_version $GLABER_VERSION"
    - *upload_rpms



