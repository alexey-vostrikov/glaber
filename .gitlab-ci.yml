stages:
#  - requirements
#  - pre-build
  - build
#  - deploy

#variables:
#  AWS_DEFAULT_REGION: eu-north-1
#  BUCKET_NAME: glaber

#download-requirements:
#  image: "python:latest"
#  stage: requirements
#  before_script:
#    - pip install awscli
#  script:
#    - aws s3 cp s3://${BUILD_BUCKET_NAME}/ ./ --recursive
#  artifacts:
#    paths:
#      - build/

#old-packages:
#  image: "python:latest"
#  stage: pre-build
#  before_script:
#    - pip install awscli
#  script:
#    - aws s3 cp s3://${BUCKET_NAME}/ ./ --recursive
#  artifacts:
#    paths:
#      - ${CI_COMMIT_REF_SLUG}/
#  environment:
#    name: ${CI_COMMIT_REF_SLUG}
#    url: http://${BUCKET_NAME}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com/${CI_COMMIT_REF_SLUG}


#debian-jessie:
#  <<: *build_deb
#  image: debian:jessie
#  script:
#    - apt-get install -y libmysqlclient-dev openjdk-7-jdk

#debian-stretch:
#  <<: *build_deb_modern
#  image: debian:stretch

debian-buster:
 # stage: build
  image: debian:buster
  only:
    - tags
    - cicd_aws
    - testing
    - packages

  script:
    - apt-get update
    - apt-get --ignore-missing install -y sshpass build-essential cmake libgmp3-dev gengetopt libpcap-dev flex byacc libjson-c-dev pkg-config libunistring-dev sass dpkg-dev devscripts wget git gcc automake dh-make build-essential autoconf autotools-dev quilt pkg-config libsnmp-dev libpq-dev libsqlite3-dev libcurl4-openssl-dev libldap2-dev libiksemel-dev libopenipmi-dev libssh2-1-dev unixodbc-dev default-jdk libxml2-dev libpcre3-dev libevent-dev libssl-dev curl default-libmysqlclient-dev libssh-dev
    - wget --no-verbose "https://golang.org/dl/go1.16.2.linux-amd64.tar.gz"
    - rm -rf /usr/local/go; tar -C /usr/local -xzf go1.16.2.linux-amd64.tar.gz
    - export PATH=$PATH:/usr/local/go/bin
    - go version
    #- git clone https://gitlab.com/mikler/glaber.git
    - ls
    #- cd glaber
    - ./bootstrap.sh
    - ./configure
    - make dbschema gettext css
    - autoreconf -fvi
    - cp -r build/debian/buster/ debian
    - cd debian 
    - git clone https://gitlab.com/mikler/glbmap.git
    - cd glbmap && cmake . && make -j4
    - mv src/zmap src/glbmap
    - cd ../..
    - dpkg-buildpackage -b --no-sign
    - sshpass   -v -p ${SCP_PASS} scp -o StrictHostKeyChecking=no -r /builds/mikler/zabbix* ${SCP_USER}@glaber.io:~/debian/

#ubuntu-focal:
#  <<: *build_deb_modern
#  image: ubuntu:focal
#  script:
#    - apt-get install -y default-libmysqlclient-dev libssh-dev

#ubuntu-bionic:
#  <<: *build_deb_modern
#  image: ubuntu:bionic
#  script:
#    - apt-get install -y libssh-dev default-libmysqlclient-dev

#ubuntu-xenial:
#  <<: *build_deb
#  image: ubuntu:xenial
#  script:
#    - apt-get install -y libmysqlclient-dev


#centos7:
#  <<: *build_rpm
#  image: centos:7
#  variables:
#    CENTOS: 7

#centos8:
#  <<: *build_rpm
#  image: centos:8
#  variables:
#    CENTOS: 8
#  before_script:
#    - dnf -y install dnf-plugins-core epel-release
#    - dnf config-manager --set-enabled powertools
#    - dnf -y install OpenIPMI-devel


#deploys3:
  image: "python:latest"
  stage: deploy
  dependencies:
#    - centos7
#    - centos8
#    - ubuntu-xenial
#    - ubuntu-bionic
#    - ubuntu-focal
#    - debian-stretch
#    - debian-jessie
#    - debian-buster
#  before_script:
#    - pip install awscli
#  script:
#    - aws s3 cp pkgs s3://${BUCKET_NAME}/${CI_COMMIT_REF_SLUG} --recursive
#  environment:
#    name: ${CI_COMMIT_REF_SLUG}
#    url: http://${BUCKET_NAME}.s3-website.${AWS_DEFAULT_REGION}.amazonaws.com/${CI_COMMIT_REF_SLUG}

