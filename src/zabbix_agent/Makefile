# Makefile.in generated by automake 1.15 from Makefile.am.
# src/zabbix_agent/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/zabbix
pkgincludedir = $(includedir)/zabbix
pkglibdir = $(libdir)/zabbix
pkglibexecdir = $(libexecdir)/zabbix
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
sbin_PROGRAMS = zabbix_agentd$(EXEEXT)
subdir = src/zabbix_agent
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_lib_ibm_db2.m4 \
	$(top_srcdir)/m4/ax_lib_mysql.m4 \
	$(top_srcdir)/m4/ax_lib_oracle_oci.m4 \
	$(top_srcdir)/m4/ax_lib_postgresql.m4 \
	$(top_srcdir)/m4/ax_lib_sqlite3.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/ldap.m4 $(top_srcdir)/m4/libcurl.m4 \
	$(top_srcdir)/m4/libevent.m4 $(top_srcdir)/m4/libgnutls.m4 \
	$(top_srcdir)/m4/libmbedtls.m4 $(top_srcdir)/m4/libopenssl.m4 \
	$(top_srcdir)/m4/libssh.m4 $(top_srcdir)/m4/libssh2.m4 \
	$(top_srcdir)/m4/libunixodbc.m4 $(top_srcdir)/m4/libxml2.m4 \
	$(top_srcdir)/m4/netsnmp.m4 $(top_srcdir)/m4/openipmi.m4 \
	$(top_srcdir)/m4/pcre.m4 $(top_srcdir)/m4/pthread.m4 \
	$(top_srcdir)/m4/resolv.m4 $(top_srcdir)/m4/zlib.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libzbxagent_a_AR = $(AR) $(ARFLAGS)
libzbxagent_a_LIBADD =
am_libzbxagent_a_OBJECTS = libzbxagent_a-active.$(OBJEXT) \
	libzbxagent_a-stats.$(OBJEXT) libzbxagent_a-cpustat.$(OBJEXT) \
	libzbxagent_a-diskdevices.$(OBJEXT) \
	libzbxagent_a-vmstats.$(OBJEXT) \
	libzbxagent_a-zbxconf.$(OBJEXT) \
	libzbxagent_a-listener.$(OBJEXT) \
	libzbxagent_a-procstat.$(OBJEXT)
libzbxagent_a_OBJECTS = $(am_libzbxagent_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(sbindir)"
PROGRAMS = $(sbin_PROGRAMS)
am_zabbix_agentd_OBJECTS = zabbix_agentd-zabbix_agentd.$(OBJEXT)
zabbix_agentd_OBJECTS = $(am_zabbix_agentd_OBJECTS)
zabbix_agentd_DEPENDENCIES = libzbxagent.a logfiles/libzbxlogfiles.a \
	$(top_srcdir)/src/libs/zbxsysinfo/libzbxagentsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/$(ARCH)/libspecsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/$(ARCH)/libspechostnamesysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/agent/libagentsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/common/libcommonsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/simple/libsimplesysinfo.a \
	$(top_srcdir)/src/libs/zbxlog/libzbxlog.a \
	$(top_srcdir)/src/libs/zbxregexp/libzbxregexp.a \
	$(top_srcdir)/src/libs/zbxalgo/libzbxalgo.a \
	$(top_srcdir)/src/libs/zbxsys/libzbxsys.a \
	$(top_srcdir)/src/libs/zbxnix/libzbxnix.a \
	$(top_srcdir)/src/libs/zbxcomms/libzbxcomms.a \
	$(top_srcdir)/src/libs/zbxconf/libzbxconf.a \
	$(top_srcdir)/src/libs/zbxjson/libzbxjson.a \
	$(top_srcdir)/src/libs/zbxcommon/libzbxcommon.a \
	$(top_srcdir)/src/libs/zbxcrypto/libzbxcrypto.a \
	$(top_srcdir)/src/libs/zbxexec/libzbxexec.a \
	$(top_srcdir)/src/libs/zbxcompress/libzbxcompress.a \
	$(top_srcdir)/src/libs/zbxmodules/libzbxmodules.a \
	$(top_srcdir)/src/libs/zbxhttp/libzbxhttp.a
zabbix_agentd_LINK = $(CCLD) $(zabbix_agentd_CFLAGS) $(CFLAGS) \
	$(zabbix_agentd_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libzbxagent_a_SOURCES) $(zabbix_agentd_SOURCES)
DIST_SOURCES = $(libzbxagent_a_SOURCES) $(zabbix_agentd_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/mikler/glaber/missing aclocal-1.15
AGENT2_CONFIG_FILE = ${prefix}/etc/zabbix_agent2.conf
AGENT_CONFIG_FILE = ${prefix}/etc/zabbix_agentd.conf
AGENT_LDFLAGS =      
AGENT_LIBS =  -lz -lpthread    -lcurl
ALERT_SCRIPTS_PATH = ${datarootdir}/zabbix/alertscripts
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
ARCH = linux
AUTOCONF = ${SHELL} /home/mikler/glaber/missing autoconf
AUTOHEADER = ${SHELL} /home/mikler/glaber/missing autoheader
AUTOMAKE = ${SHELL} /home/mikler/glaber/missing automake-1.15
AWK = gawk
CC = cc
CCDEPMODE = depmode=gcc3
CFLAGS =  -g -O2 
CGO_CFLAGS = 
CGO_LDFLAGS =       -Wl,--start-group 	${abs_top_builddir}/src/zabbix_agent/logfiles/libzbxlogfiles.a 	${abs_top_builddir}/src/libs/zbxcomms/libzbxcomms.a 	${abs_top_builddir}/src/libs/zbxcommon/libzbxcommon.a 	${abs_top_builddir}/src/libs/zbxcrypto/libzbxcrypto.a 	${abs_top_builddir}/src/libs/zbxsys/libzbxsys.a 	${abs_top_builddir}/src/libs/zbxnix/libzbxnix.a 	${abs_top_builddir}/src/libs/zbxconf/libzbxconf.a 	${abs_top_builddir}/src/libs/zbxhttp/libzbxhttp.a 	${abs_top_builddir}/src/libs/zbxcompress/libzbxcompress.a 	${abs_top_builddir}/src/libs/zbxregexp/libzbxregexp.a 	${abs_top_builddir}/src/libs/zbxsysinfo/libzbxagentsysinfo.a 	${abs_top_builddir}/src/libs/zbxsysinfo/common/libcommonsysinfo.a 	${abs_top_builddir}/src/libs/zbxsysinfo/simple/libsimplesysinfo.a 	${abs_top_builddir}/src/libs/zbxsysinfo/linux/libspechostnamesysinfo.a 	${abs_top_builddir}/src/libs/zbxsysinfo/linux/libspecsysinfo.a 	${abs_top_builddir}/src/libs/zbxexec/libzbxexec.a 	${abs_top_builddir}/src/libs/zbxalgo/libzbxalgo.a 	${abs_top_builddir}/src/libs/zbxjson/libzbxjson.a 	-lm -ldl  -lresolv -lpcre   -lz -lpthread    -lcurl -Wl,--end-group
CPP = cc -E
CPPFLAGS = 
CURL_SSL_CERT_LOCATION = ${datarootdir}/zabbix/ssl/certs
CURL_SSL_KEY_LOCATION = ${datarootdir}/zabbix/ssl/keys
CYGPATH_W = echo
DB_CFLAGS =    -I/usr/include/postgresql 
DB_LDFLAGS =    -L/usr/lib/x86_64-linux-gnu 
DB_LIBS =    -lpq 
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXTERNAL_SCRIPTS_PATH = ${datarootdir}/zabbix/externalscripts
GNUTLS_CFLAGS = 
GNUTLS_LDFLAGS = 
GNUTLS_LIBS = 
GO = 
GOBIN = ${exec_prefix}/sbin
GOCMD = go
GOWORKDIR = /home/mikler/glaber/go/src/zabbix
GREP = /bin/grep
ICONV_CFLAGS = 
ICONV_LDFLAGS = 
ICONV_LIBS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
JAR = 
JAVAC = 
LDAP_CPPFLAGS = 
LDAP_LDFLAGS = 
LDAP_LIBS = 
LDFLAGS = -rdynamic   
LIBCURL_CFLAGS = 
LIBCURL_LDFLAGS = 
LIBCURL_LIBS =  -lcurl
LIBEVENT_CFLAGS = 
LIBEVENT_LDFLAGS = 
LIBEVENT_LIBS = -levent
LIBOBJS = 
LIBPCRE_CFLAGS = 
LIBPCRE_LDFLAGS = 
LIBPCRE_LIBS = -lpcre
LIBPTHREAD_CFLAGS = 
LIBPTHREAD_LDFLAGS = 
LIBPTHREAD_LIBS = -lpthread
LIBS = -lm -ldl  -lresolv -lpcre 
LIBXML2_CFLAGS = 
LIBXML2_LDFLAGS = 
LIBXML2_LIBS = 
LIBXML2_VERSION = 
LOAD_MODULE_PATH = ${exec_prefix}/lib/modules
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/mikler/glaber/missing makeinfo
MBEDTLS_CFLAGS = 
MBEDTLS_LDFLAGS = 
MBEDTLS_LIBS = 
MKDIR_P = /bin/mkdir -p
MYSQL_CFLAGS = 
MYSQL_CONFIG = no
MYSQL_LDFLAGS = 
MYSQL_LIBS = 
MYSQL_VERSION = 
OBJEXT = o
ODBC_CONFIG = 
OPENIPMI_CFLAGS = 
OPENIPMI_LDFLAGS = 
OPENIPMI_LIBS = 
OPENSSL_CFLAGS = 
OPENSSL_LDFLAGS = 
OPENSSL_LIBS = 
ORACLE_OCI_CFLAGS = 
ORACLE_OCI_LDFLAGS = 
ORACLE_OCI_LIBS = 
ORACLE_OCI_VERSION = 
PACKAGE = zabbix
PACKAGE_BUGREPORT = 
PACKAGE_NAME = Zabbix
PACKAGE_STRING = Zabbix 4.4.7
PACKAGE_TARNAME = zabbix
PACKAGE_URL = 
PACKAGE_VERSION = 4.4.7
PATH_SEPARATOR = :
PG_CONFIG = /usr/bin/pg_config
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSTGRESQL_CFLAGS = -I/usr/include/postgresql
POSTGRESQL_LDFLAGS = -L/usr/lib/x86_64-linux-gnu
POSTGRESQL_LIBS = -lpq
POSTGRESQL_VERSION = 9.6.15
PROXY_CONFIG_FILE = ${prefix}/etc/zabbix_proxy.conf
PROXY_LDFLAGS =     -L/usr/lib/x86_64-linux-gnu     -L/usr/lib/x86_64-linux-gnu         
PROXY_LIBS =     -lpq     -lnetsnmp    -lz -lpthread -levent    -lcurl
RANLIB = ranlib
RESOLV_LIBS = -lresolv
SENDER_LDFLAGS =    
SENDER_LIBS =   -lz -lpthread
SERVER_CONFIG_FILE = ${prefix}/etc/zabbix_server.conf
SERVER_LDFLAGS =     -L/usr/lib/x86_64-linux-gnu     -L/usr/lib/x86_64-linux-gnu         
SERVER_LIBS =     -lpq     -lnetsnmp    -lz -lpthread -levent    -lcurl
SET_MAKE = 
SHELL = /bin/bash
SNMP_CFLAGS =  -I/usr/local/include -I/usr/lib/x86_64-linux-gnu/perl/5.24/CORE -I. -I/usr/include
SNMP_LDFLAGS =  -L/usr/lib/x86_64-linux-gnu
SNMP_LIBS =  -lnetsnmp
SQLITE3_CPPFLAGS = 
SQLITE3_LDFLAGS = 
SQLITE3_LIBS = 
SQLITE3_VERSION = 
SSH2_CFLAGS = 
SSH2_LDFLAGS = 
SSH2_LIBS = 
SSH_CFLAGS = 
SSH_LDFLAGS = 
SSH_LIBS = 
STRIP = 
TLS_CFLAGS = 
UNIXODBC_CFLAGS = 
UNIXODBC_LDFLAGS = 
UNIXODBC_LIBS = 
VERSION = 4.4.7
ZBXGET_LDFLAGS =    
ZBXGET_LIBS =   -lz -lpthread
ZBXJS_LDFLAGS =     
ZBXJS_LIBS =  -lz -lpthread   -lcurl
ZLIB_CFLAGS = 
ZLIB_LDFLAGS = 
ZLIB_LIBS = -lz
_libcurl_config = 
_libnetsnmp_config = /usr/bin/net-snmp-config
abs_builddir = /home/mikler/glaber/src/zabbix_agent
abs_srcdir = /home/mikler/glaber/src/zabbix_agent
abs_top_builddir = /home/mikler/glaber
abs_top_srcdir = /home/mikler/glaber
ac_ct_CC = cc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/mikler/glaber/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
SUBDIRS = \
	logfiles

EXTRA_DIST = \
	eventlog.c eventlog.h \
	perfstat.c perfstat.h

noinst_LIBRARIES = libzbxagent.a
libzbxagent_a_SOURCES = \
	active.c active.h \
	stats.c stats.h \
	cpustat.c cpustat.h \
	diskdevices.c diskdevices.h \
	vmstats.c vmstats.h \
	zbxconf.c zbxconf.h \
	listener.c listener.h \
	procstat.c procstat.h \
	metrics.h

libzbxagent_a_CFLAGS = \
	-DZABBIX_DAEMON

zabbix_agentd_SOURCES = zabbix_agentd.c
zabbix_agentd_LDADD = libzbxagent.a logfiles/libzbxlogfiles.a \
	$(top_srcdir)/src/libs/zbxsysinfo/libzbxagentsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/$(ARCH)/libspecsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/$(ARCH)/libspechostnamesysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/agent/libagentsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/common/libcommonsysinfo.a \
	$(top_srcdir)/src/libs/zbxsysinfo/simple/libsimplesysinfo.a \
	$(top_srcdir)/src/libs/zbxlog/libzbxlog.a \
	$(top_srcdir)/src/libs/zbxregexp/libzbxregexp.a \
	$(top_srcdir)/src/libs/zbxalgo/libzbxalgo.a \
	$(top_srcdir)/src/libs/zbxsys/libzbxsys.a \
	$(top_srcdir)/src/libs/zbxnix/libzbxnix.a \
	$(top_srcdir)/src/libs/zbxcomms/libzbxcomms.a \
	$(top_srcdir)/src/libs/zbxconf/libzbxconf.a \
	$(top_srcdir)/src/libs/zbxjson/libzbxjson.a \
	$(top_srcdir)/src/libs/zbxcommon/libzbxcommon.a \
	$(top_srcdir)/src/libs/zbxcrypto/libzbxcrypto.a \
	$(top_srcdir)/src/libs/zbxexec/libzbxexec.a \
	$(top_srcdir)/src/libs/zbxcompress/libzbxcompress.a \
	$(top_srcdir)/src/libs/zbxmodules/libzbxmodules.a \
	$(top_srcdir)/src/libs/zbxhttp/libzbxhttp.a  -lz -lpthread    -lcurl
zabbix_agentd_LDFLAGS =      
zabbix_agentd_CFLAGS = \
	-DZABBIX_DAEMON \
	-DDEFAULT_CONFIG_FILE="\"${prefix}/etc/zabbix_agentd.conf\"" \
	-DDEFAULT_LOAD_MODULE_PATH="\"${exec_prefix}/lib/modules\""

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/zabbix_agent/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/zabbix_agent/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libzbxagent.a: $(libzbxagent_a_OBJECTS) $(libzbxagent_a_DEPENDENCIES) $(EXTRA_libzbxagent_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libzbxagent.a
	$(AM_V_AR)$(libzbxagent_a_AR) libzbxagent.a $(libzbxagent_a_OBJECTS) $(libzbxagent_a_LIBADD)
	$(AM_V_at)$(RANLIB) libzbxagent.a
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)

zabbix_agentd$(EXEEXT): $(zabbix_agentd_OBJECTS) $(zabbix_agentd_DEPENDENCIES) $(EXTRA_zabbix_agentd_DEPENDENCIES) 
	@rm -f zabbix_agentd$(EXEEXT)
	$(AM_V_CCLD)$(zabbix_agentd_LINK) $(zabbix_agentd_OBJECTS) $(zabbix_agentd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libzbxagent_a-active.Po
include ./$(DEPDIR)/libzbxagent_a-cpustat.Po
include ./$(DEPDIR)/libzbxagent_a-diskdevices.Po
include ./$(DEPDIR)/libzbxagent_a-listener.Po
include ./$(DEPDIR)/libzbxagent_a-procstat.Po
include ./$(DEPDIR)/libzbxagent_a-stats.Po
include ./$(DEPDIR)/libzbxagent_a-vmstats.Po
include ./$(DEPDIR)/libzbxagent_a-zbxconf.Po
include ./$(DEPDIR)/zabbix_agentd-zabbix_agentd.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

libzbxagent_a-active.o: active.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-active.o -MD -MP -MF $(DEPDIR)/libzbxagent_a-active.Tpo -c -o libzbxagent_a-active.o `test -f 'active.c' || echo '$(srcdir)/'`active.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-active.Tpo $(DEPDIR)/libzbxagent_a-active.Po
#	$(AM_V_CC)source='active.c' object='libzbxagent_a-active.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-active.o `test -f 'active.c' || echo '$(srcdir)/'`active.c

libzbxagent_a-active.obj: active.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-active.obj -MD -MP -MF $(DEPDIR)/libzbxagent_a-active.Tpo -c -o libzbxagent_a-active.obj `if test -f 'active.c'; then $(CYGPATH_W) 'active.c'; else $(CYGPATH_W) '$(srcdir)/active.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-active.Tpo $(DEPDIR)/libzbxagent_a-active.Po
#	$(AM_V_CC)source='active.c' object='libzbxagent_a-active.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-active.obj `if test -f 'active.c'; then $(CYGPATH_W) 'active.c'; else $(CYGPATH_W) '$(srcdir)/active.c'; fi`

libzbxagent_a-stats.o: stats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-stats.o -MD -MP -MF $(DEPDIR)/libzbxagent_a-stats.Tpo -c -o libzbxagent_a-stats.o `test -f 'stats.c' || echo '$(srcdir)/'`stats.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-stats.Tpo $(DEPDIR)/libzbxagent_a-stats.Po
#	$(AM_V_CC)source='stats.c' object='libzbxagent_a-stats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-stats.o `test -f 'stats.c' || echo '$(srcdir)/'`stats.c

libzbxagent_a-stats.obj: stats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-stats.obj -MD -MP -MF $(DEPDIR)/libzbxagent_a-stats.Tpo -c -o libzbxagent_a-stats.obj `if test -f 'stats.c'; then $(CYGPATH_W) 'stats.c'; else $(CYGPATH_W) '$(srcdir)/stats.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-stats.Tpo $(DEPDIR)/libzbxagent_a-stats.Po
#	$(AM_V_CC)source='stats.c' object='libzbxagent_a-stats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-stats.obj `if test -f 'stats.c'; then $(CYGPATH_W) 'stats.c'; else $(CYGPATH_W) '$(srcdir)/stats.c'; fi`

libzbxagent_a-cpustat.o: cpustat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-cpustat.o -MD -MP -MF $(DEPDIR)/libzbxagent_a-cpustat.Tpo -c -o libzbxagent_a-cpustat.o `test -f 'cpustat.c' || echo '$(srcdir)/'`cpustat.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-cpustat.Tpo $(DEPDIR)/libzbxagent_a-cpustat.Po
#	$(AM_V_CC)source='cpustat.c' object='libzbxagent_a-cpustat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-cpustat.o `test -f 'cpustat.c' || echo '$(srcdir)/'`cpustat.c

libzbxagent_a-cpustat.obj: cpustat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-cpustat.obj -MD -MP -MF $(DEPDIR)/libzbxagent_a-cpustat.Tpo -c -o libzbxagent_a-cpustat.obj `if test -f 'cpustat.c'; then $(CYGPATH_W) 'cpustat.c'; else $(CYGPATH_W) '$(srcdir)/cpustat.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-cpustat.Tpo $(DEPDIR)/libzbxagent_a-cpustat.Po
#	$(AM_V_CC)source='cpustat.c' object='libzbxagent_a-cpustat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-cpustat.obj `if test -f 'cpustat.c'; then $(CYGPATH_W) 'cpustat.c'; else $(CYGPATH_W) '$(srcdir)/cpustat.c'; fi`

libzbxagent_a-diskdevices.o: diskdevices.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-diskdevices.o -MD -MP -MF $(DEPDIR)/libzbxagent_a-diskdevices.Tpo -c -o libzbxagent_a-diskdevices.o `test -f 'diskdevices.c' || echo '$(srcdir)/'`diskdevices.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-diskdevices.Tpo $(DEPDIR)/libzbxagent_a-diskdevices.Po
#	$(AM_V_CC)source='diskdevices.c' object='libzbxagent_a-diskdevices.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-diskdevices.o `test -f 'diskdevices.c' || echo '$(srcdir)/'`diskdevices.c

libzbxagent_a-diskdevices.obj: diskdevices.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-diskdevices.obj -MD -MP -MF $(DEPDIR)/libzbxagent_a-diskdevices.Tpo -c -o libzbxagent_a-diskdevices.obj `if test -f 'diskdevices.c'; then $(CYGPATH_W) 'diskdevices.c'; else $(CYGPATH_W) '$(srcdir)/diskdevices.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-diskdevices.Tpo $(DEPDIR)/libzbxagent_a-diskdevices.Po
#	$(AM_V_CC)source='diskdevices.c' object='libzbxagent_a-diskdevices.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-diskdevices.obj `if test -f 'diskdevices.c'; then $(CYGPATH_W) 'diskdevices.c'; else $(CYGPATH_W) '$(srcdir)/diskdevices.c'; fi`

libzbxagent_a-vmstats.o: vmstats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-vmstats.o -MD -MP -MF $(DEPDIR)/libzbxagent_a-vmstats.Tpo -c -o libzbxagent_a-vmstats.o `test -f 'vmstats.c' || echo '$(srcdir)/'`vmstats.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-vmstats.Tpo $(DEPDIR)/libzbxagent_a-vmstats.Po
#	$(AM_V_CC)source='vmstats.c' object='libzbxagent_a-vmstats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-vmstats.o `test -f 'vmstats.c' || echo '$(srcdir)/'`vmstats.c

libzbxagent_a-vmstats.obj: vmstats.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-vmstats.obj -MD -MP -MF $(DEPDIR)/libzbxagent_a-vmstats.Tpo -c -o libzbxagent_a-vmstats.obj `if test -f 'vmstats.c'; then $(CYGPATH_W) 'vmstats.c'; else $(CYGPATH_W) '$(srcdir)/vmstats.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-vmstats.Tpo $(DEPDIR)/libzbxagent_a-vmstats.Po
#	$(AM_V_CC)source='vmstats.c' object='libzbxagent_a-vmstats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-vmstats.obj `if test -f 'vmstats.c'; then $(CYGPATH_W) 'vmstats.c'; else $(CYGPATH_W) '$(srcdir)/vmstats.c'; fi`

libzbxagent_a-zbxconf.o: zbxconf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-zbxconf.o -MD -MP -MF $(DEPDIR)/libzbxagent_a-zbxconf.Tpo -c -o libzbxagent_a-zbxconf.o `test -f 'zbxconf.c' || echo '$(srcdir)/'`zbxconf.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-zbxconf.Tpo $(DEPDIR)/libzbxagent_a-zbxconf.Po
#	$(AM_V_CC)source='zbxconf.c' object='libzbxagent_a-zbxconf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-zbxconf.o `test -f 'zbxconf.c' || echo '$(srcdir)/'`zbxconf.c

libzbxagent_a-zbxconf.obj: zbxconf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-zbxconf.obj -MD -MP -MF $(DEPDIR)/libzbxagent_a-zbxconf.Tpo -c -o libzbxagent_a-zbxconf.obj `if test -f 'zbxconf.c'; then $(CYGPATH_W) 'zbxconf.c'; else $(CYGPATH_W) '$(srcdir)/zbxconf.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-zbxconf.Tpo $(DEPDIR)/libzbxagent_a-zbxconf.Po
#	$(AM_V_CC)source='zbxconf.c' object='libzbxagent_a-zbxconf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-zbxconf.obj `if test -f 'zbxconf.c'; then $(CYGPATH_W) 'zbxconf.c'; else $(CYGPATH_W) '$(srcdir)/zbxconf.c'; fi`

libzbxagent_a-listener.o: listener.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-listener.o -MD -MP -MF $(DEPDIR)/libzbxagent_a-listener.Tpo -c -o libzbxagent_a-listener.o `test -f 'listener.c' || echo '$(srcdir)/'`listener.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-listener.Tpo $(DEPDIR)/libzbxagent_a-listener.Po
#	$(AM_V_CC)source='listener.c' object='libzbxagent_a-listener.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-listener.o `test -f 'listener.c' || echo '$(srcdir)/'`listener.c

libzbxagent_a-listener.obj: listener.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-listener.obj -MD -MP -MF $(DEPDIR)/libzbxagent_a-listener.Tpo -c -o libzbxagent_a-listener.obj `if test -f 'listener.c'; then $(CYGPATH_W) 'listener.c'; else $(CYGPATH_W) '$(srcdir)/listener.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-listener.Tpo $(DEPDIR)/libzbxagent_a-listener.Po
#	$(AM_V_CC)source='listener.c' object='libzbxagent_a-listener.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-listener.obj `if test -f 'listener.c'; then $(CYGPATH_W) 'listener.c'; else $(CYGPATH_W) '$(srcdir)/listener.c'; fi`

libzbxagent_a-procstat.o: procstat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-procstat.o -MD -MP -MF $(DEPDIR)/libzbxagent_a-procstat.Tpo -c -o libzbxagent_a-procstat.o `test -f 'procstat.c' || echo '$(srcdir)/'`procstat.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-procstat.Tpo $(DEPDIR)/libzbxagent_a-procstat.Po
#	$(AM_V_CC)source='procstat.c' object='libzbxagent_a-procstat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-procstat.o `test -f 'procstat.c' || echo '$(srcdir)/'`procstat.c

libzbxagent_a-procstat.obj: procstat.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -MT libzbxagent_a-procstat.obj -MD -MP -MF $(DEPDIR)/libzbxagent_a-procstat.Tpo -c -o libzbxagent_a-procstat.obj `if test -f 'procstat.c'; then $(CYGPATH_W) 'procstat.c'; else $(CYGPATH_W) '$(srcdir)/procstat.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libzbxagent_a-procstat.Tpo $(DEPDIR)/libzbxagent_a-procstat.Po
#	$(AM_V_CC)source='procstat.c' object='libzbxagent_a-procstat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libzbxagent_a_CFLAGS) $(CFLAGS) -c -o libzbxagent_a-procstat.obj `if test -f 'procstat.c'; then $(CYGPATH_W) 'procstat.c'; else $(CYGPATH_W) '$(srcdir)/procstat.c'; fi`

zabbix_agentd-zabbix_agentd.o: zabbix_agentd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-zabbix_agentd.o -MD -MP -MF $(DEPDIR)/zabbix_agentd-zabbix_agentd.Tpo -c -o zabbix_agentd-zabbix_agentd.o `test -f 'zabbix_agentd.c' || echo '$(srcdir)/'`zabbix_agentd.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/zabbix_agentd-zabbix_agentd.Tpo $(DEPDIR)/zabbix_agentd-zabbix_agentd.Po
#	$(AM_V_CC)source='zabbix_agentd.c' object='zabbix_agentd-zabbix_agentd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-zabbix_agentd.o `test -f 'zabbix_agentd.c' || echo '$(srcdir)/'`zabbix_agentd.c

zabbix_agentd-zabbix_agentd.obj: zabbix_agentd.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -MT zabbix_agentd-zabbix_agentd.obj -MD -MP -MF $(DEPDIR)/zabbix_agentd-zabbix_agentd.Tpo -c -o zabbix_agentd-zabbix_agentd.obj `if test -f 'zabbix_agentd.c'; then $(CYGPATH_W) 'zabbix_agentd.c'; else $(CYGPATH_W) '$(srcdir)/zabbix_agentd.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/zabbix_agentd-zabbix_agentd.Tpo $(DEPDIR)/zabbix_agentd-zabbix_agentd.Po
#	$(AM_V_CC)source='zabbix_agentd.c' object='zabbix_agentd-zabbix_agentd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(zabbix_agentd_CFLAGS) $(CFLAGS) -c -o zabbix_agentd-zabbix_agentd.obj `if test -f 'zabbix_agentd.c'; then $(CYGPATH_W) 'zabbix_agentd.c'; else $(CYGPATH_W) '$(srcdir)/zabbix_agentd.c'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-noinstLIBRARIES clean-sbinPROGRAMS \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-sbinPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-sbinPROGRAMS

.MAKE: $(am__recursive_targets) install-am install-data-am \
	install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-am clean clean-generic clean-noinstLIBRARIES \
	clean-sbinPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-data-hook install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-sbinPROGRAMS

.PRECIOUS: Makefile


install-data-hook:
	$(MKDIR_P) "$(DESTDIR)${prefix}/etc/zabbix_agentd.conf.d"
	$(MKDIR_P) "$(DESTDIR)${exec_prefix}/lib/modules"
	test -f "$(DESTDIR)${prefix}/etc/zabbix_agentd.conf" || cp "../../conf/zabbix_agentd.conf" "$(DESTDIR)${prefix}/etc/zabbix_agentd.conf"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
